[{"D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\index.js":"1","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\reportWebVitals.js":"2","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\App.js":"3","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\pages\\HomePage.jsx":"4","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\pages\\FindaGame.jsx":"5","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\hooks\\useAuth.js":"6","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\contexts\\AuthProvider.js":"7","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\pages\\GameWaitingPageCreator.jsx":"8","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\pages\\GameWaitingPageJoin.jsx":"9","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\contexts\\WSContext.js":"10","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\pages\\GamePage.jsx":"11","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\pages\\Location.jsx":"12"},{"size":818,"mtime":1723006478517,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1709771726717,"results":"15","hashOfConfig":"14"},{"size":6580,"mtime":1723003394618,"results":"16","hashOfConfig":"14"},{"size":706,"mtime":1718672428758,"results":"17","hashOfConfig":"14"},{"size":4118,"mtime":1721336721818,"results":"18","hashOfConfig":"14"},{"size":165,"mtime":1719259334859,"results":"19","hashOfConfig":"14"},{"size":349,"mtime":1718672099658,"results":"20","hashOfConfig":"14"},{"size":2834,"mtime":1723003410782,"results":"21","hashOfConfig":"14"},{"size":2413,"mtime":1723003431765,"results":"22","hashOfConfig":"14"},{"size":1865,"mtime":1719363680379,"results":"23","hashOfConfig":"14"},{"size":16345,"mtime":1723003362538,"results":"24","hashOfConfig":"14"},{"size":512,"mtime":1720934254956,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1335ojk",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\index.js",[],[],"D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\reportWebVitals.js",[],[],"D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\App.js",["68","69","70","71","72"],[],"import './App.css';\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useNavigate, useLocation, Route, Link, NavLink } from 'react-router-dom';\r\nimport HomePage from \"./pages/HomePage\";\r\nimport FindaGame from \"./pages/FindaGame\";\r\nimport GameWaitingPageJoin from \"./pages/GameWaitingPageJoin\";\r\nimport useAuth from './hooks/useAuth';\r\nimport GameWaitingPageCreator from './pages/GameWaitingPageCreator';\r\nimport GamePage from './pages/GamePage';\r\nlet clientId = null;\r\nconst ws = new WebSocket(\"ws://localhost:9090\")\r\n\r\n\r\nfunction App() {\r\n  const {setAuth} = useAuth();\r\n  ws.onmessage = message =>{\r\n    const response = JSON.parse(message.data);\r\n    if(response.method === \"connect\"){\r\n      clientId = response.clientID;\r\n      setAuth([clientId]);\r\n    }\r\n\r\n    if(response.method === \"create\"){\r\n      const game = response.game;\r\n      setAuth([clientId, response.game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n\r\n    if(response.method === \"RandomServer\"){\r\n      const game = response.game;\r\n      const duty = response.duty\r\n      if(duty === \"Parent\"){\r\n        navigate('/GameWaitingPageCreator')\r\n      }else{\r\n        if(location.pathname === '/GameWaitingPageCreator'){\r\n          navigate('/GameWaitingPageCreator')\r\n        }else{\r\n          if(game.state === \"waiting\"){\r\n            navigate('/GameWaitingPageJoin')\r\n          }else {\r\n            navigate('/GamePage')\r\n          }\r\n          \r\n        }\r\n      }\r\n      setAuth([clientId, response.game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n\r\n    if(response.method === \"join\"){\r\n      const game = response.game;\r\n      const colour = [];\r\n      if(game != null){\r\n        const serverlist = [];\r\n        game.clients.forEach(c =>{\r\n          serverlist.push(c.clientName);\r\n          colour.push(c.colour);\r\n        })\r\n      \r\n        if(location.pathname === '/GameWaitingPageCreator'){\r\n          navigate('/GameWaitingPageCreator')\r\n        }else{\r\n          if(game.state === \"waiting\"){\r\n            navigate('/GameWaitingPageJoin')\r\n          }else {\r\n            navigate('/GamePage')\r\n          }\r\n        }\r\n        setAuth([clientId, response.game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n      }else{\r\n        alert(\"That game server code does not work\");\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    if(response.method === \"count\"){\r\n      const game = response.game;\r\n      const serverlist = [];\r\n      game.clients.forEach(c =>{\r\n        serverlist.push(c.clientName);\r\n      })\r\n\r\n      setAuth([clientId, game.id, serverlist, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\r\n      \r\n    }\r\n\r\n    if(response.method === \"start\"){\r\n      const game = response.game;\r\n      navigate('/GamePage')\r\n      setAuth([clientId,game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n      \r\n    }\r\n\r\n\r\n    if(response.method === \"delete\"){\r\n      const game = response.game;\r\n      let x = 0, clientNum;\r\n      if(response.roundchange){\r\n        game.clients.forEach(c =>{\r\n          if(c.clientId === clientId){\r\n            clientNum = x;\r\n          }\r\n          x++;\r\n        })\r\n        const duty = game.clients[clientNum].duty;\r\n        if(duty === \"Parent\"){\r\n          if( location.pathname === '/GameWaitingPageJoin'){\r\n            navigate('/GameWaitingPageCreator')\r\n          }\r\n          \r\n        }\r\n        setAuth([clientId,game.id,game.clients,game.acronym, game.stage, game.roundWinner, response.roundchange, game.availability])\r\n      }else{\r\n        \r\n        if(response.stage3){\r\n          let turn = false\r\n          game.clients.forEach(c =>{\r\n            if(c.clientId === clientId && c.turn === true){\r\n              turn = true\r\n            }\r\n          })\r\n          if(turn === true){\r\n            setAuth([clientId,game.id,game.clients,game.acronym, game.stage, game.roundWinner, \"ping\", game.availability])\r\n          }\r\n        }else{\r\n          game.clients.forEach(c =>{\r\n            if(c.clientId === clientId){\r\n              clientNum = x;\r\n            }\r\n            x++;\r\n          })\r\n          const duty = game.clients[clientNum].duty;\r\n          if(duty === \"Parent\"){\r\n            if( location.pathname === '/GameWaitingPageJoin'){\r\n              navigate('/GameWaitingPageCreator')\r\n            }\r\n            \r\n          }\r\n          setAuth([clientId,game.id,game.clients,game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n        }\r\n        \r\n      }\r\n      \r\n\r\n    }\r\n\r\n    if(response.method === \"serverFull\"){\r\n      alert(\"That Server Is currently Full\")\r\n      \r\n    }\r\n\r\n    if(response.method === \"select\"){\r\n      const game = response.game\r\n      setAuth([clientId,game.id,game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n\r\n    if(response.method === \"submit\"){\r\n      const game = response.game\r\n      setAuth([clientId,game.id,game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n    if(response.method === \"point\"){\r\n      const game = response.game\r\n      setAuth([clientId,game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n    if(response.method === \"round\"){\r\n      const game = response.game\r\n      setAuth([clientId,game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n      setAuth([clientId,game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n\r\n    if(response.method === \"reset\"){\r\n      const game = response.game\r\n      setAuth([clientId,game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n\r\n    if(response.method === \"serverClosed\"){\r\n      window.location.reload();\r\n      alert(\"The server has closed due to lack of players\")\r\n\r\n      setAuth([clientId, null, null, null, null, null])\r\n    }\r\n  }\r\n  \r\n  \r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <HomePage location={location}/>\r\n      <FindaGame location={location}/>\r\n      <GameWaitingPageCreator location={location}/>\r\n      <GameWaitingPageJoin location={location}/>\r\n      <GamePage location={location}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\pages\\HomePage.jsx",["73","74"],[],"import logo from './4me.png';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport react, {useState} from 'react';\r\n\r\n\r\nconst HomePage = ({location}) => {\r\n\r\n \r\n\r\n  const [Height, setHeight] = useState('100hv');\r\n  const navigate = useNavigate();\r\n  return (location.pathname === '/HomePage' || location.pathname === '/')\r\n  ? (\r\n    <div className=\"App\" style={{ height: Height}}>\r\n      <h1 className=\"App-header\">\r\n        Acronym for me\r\n      </h1>\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <div></div>\r\n      <button type=\"button\" className=\"App-button\" onClick={() => navigate('/FindaGame')} >search for game</button>\r\n    </div>\r\n  ): null;\r\n}\r\n\r\nexport default HomePage;","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\pages\\FindaGame.jsx",["75","76","77","78","79","80","81","82"],[],"//import logo from './4me.png';\r\nimport './FindaGame.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport React, {useEffect, useState} from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nconst ws = new WebSocket(\"ws://localhost:9090\")\r\n\r\nconst FindaGame = ({location}) => {\r\n  const navigate = useNavigate();\r\n  const [Height, setHeight] = useState('100hv');\r\n  //const {joinlobby} = useRandomLobby();\r\n  const [user, setUser] =useState({\r\n    nameR: '',\r\n    nameS: '',\r\n    nameC: '',\r\n    code: '',\r\n  });\r\n  const { auth } = useAuth();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({\r\n      ...user,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const randomLobby = () => {\r\n    if(user.nameR != '' && user.nameR.length < 15){\r\n      const payLoad = {\r\n        \"method\": \"RandomServer\",\r\n        \"clientId\" : auth[0],\r\n        \"clientName\" : user.nameR\r\n      }\r\n      ws.send(JSON.stringify(payLoad))\r\n    }else{\r\n      if(user.nameR == '')\r\n        alert(\"Fill in user name!\");\r\n      else\r\n        alert(\"User name is too long\")\r\n    }\r\n  };\r\n\r\n  const CreateLobby = () => {\r\n    if(user.nameC != '' && user.nameC.length < 15){\r\n      const payLoad = {\r\n        \"method\": \"create\",\r\n        \"clientId\" : auth[0],\r\n        \"clientName\" : user.nameC\r\n      }\r\n      ws.send(JSON.stringify(payLoad))\r\n      navigate('/GameWaitingPageCreator')\r\n    }else{\r\n      if(user.nameC == '')\r\n        alert(\"Fill in user name!\");\r\n      else\r\n        alert(\"User name is too long\")\r\n    }\r\n  };\r\n\r\n  const JoinSpecificLobby = () =>{\r\n    console.log(user.nameS.length)\r\n    if(user.nameS.length != 0 && user.nameS.length < 15){\r\n      const payLoad = {\r\n        \"method\": \"join\",\r\n        \"clientId\" : auth[0],\r\n        \"clientName\": user.nameS,\r\n        \"gameId\" : user.code\r\n      }\r\n      \r\n      ws.send(JSON.stringify(payLoad))\r\n      \r\n    }else{\r\n      if(user.nameS == ''){\r\n        alert(\"Fill in user name!\")\r\n      }else{\r\n        alert(\"User name is too long\")\r\n      }\r\n    }\r\n    \r\n\r\n  }\r\n  return (location.pathname === '/FindaGame')\r\n  ? (\r\n    <div className=\"App\" style={{ height: Height}}>\r\n      <h1 className=\"App-header\">\r\n        Acronym 4 Me\r\n      </h1>\r\n      <div className = \"container\">\r\n      <h2 className = \"findrandomgame\"> \r\n        Search for a random lobby\r\n        <div className = \"space\">\r\n          <div>\r\n            Name\r\n          </div>\r\n          <input\r\n            className = \"textbox\"\r\n            type=\"text\"\r\n            name=\"nameR\"\r\n            value={user.nameR}\r\n            onChange={handleChange}\r\n            />\r\n            \r\n        </div>\r\n        <button className = \"button-84\" onClick={() => randomLobby()}>\r\n          Join Game\r\n        </button>\r\n      </h2>\r\n      <h2 className = \"entergamecode\"> \r\n        Search for a lobby using a code\r\n        <div className = \"space\">\r\n          <div>\r\n            Name\r\n          </div>\r\n          <input\r\n            className = \"textbox\"\r\n            type=\"text\"\r\n            name=\"nameS\"\r\n            value={user.nameS}\r\n            onChange={handleChange}\r\n            />\r\n        </div>\r\n        <div className = \"space\">\r\n          <div>\r\n            Code\r\n          </div>\r\n          <input\r\n            className = \"textbox\"\r\n            type=\"text\"\r\n            name=\"code\"\r\n            value={user.code}\r\n            onChange={handleChange}\r\n            />\r\n        </div>\r\n        <button className = \"button-84\" onClick={() => JoinSpecificLobby()}>\r\n          Join Game\r\n        </button>\r\n      </h2>\r\n      </div>\r\n      <h3 className = \"createagame\">\r\n        Create a Lobby\r\n        <div className=\"space\" >\r\n          <div>\r\n            Name\r\n          </div>\r\n          <input\r\n            className = \"textbox2\"\r\n            type=\"text\"\r\n            name=\"nameC\"\r\n            value={user.nameC}\r\n            onChange={handleChange}\r\n            />\r\n        </div>\r\n        <button className = \"button-2\" onClick={() => CreateLobby()}>\r\n          Create Game\r\n        </button>\r\n      </h3>\r\n    </div>\r\n  ): null;\r\n}\r\n\r\nexport default FindaGame;","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\hooks\\useAuth.js",[],[],"D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\contexts\\AuthProvider.js",[],[],"D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\pages\\GameWaitingPageCreator.jsx",["83","84","85","86","87","88","89"],[],"import logo from './4me.png';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport react, {useEffect, useState, useRef } from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nconst ws = new WebSocket(\"ws://localhost:9090\")\r\n\r\n\r\nconst GameWaitingPageCreator = ({location}) => {\r\n\r\n    const { auth } = useAuth();\r\n    const [Height, setHeight] = useState('100hv');\r\n    const navigate = useNavigate();\r\n    const [userlist, setList] = useState();\r\n    const [time, setTime] = useState(30);\r\n    const [clock, setClock] = useState(false);\r\n    const timerId1 = useRef()\r\n    const checkPlayerCount = () => {\r\n        const payLoad = {\r\n            \"method\": \"count\",\r\n            \"gameId\": auth[1]\r\n        }\r\n        ws.send(JSON.stringify(payLoad))\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        if(location.pathname === '/GameWaitingPageCreator'){\r\n            if(auth[1] == null){\r\n                navigate('/');\r\n            }else{\r\n                const serverlist = [];\r\n                auth[2].forEach(c =>{\r\n                serverlist.push(c.clientName);\r\n                })\r\n                setList(serverlist.map(name => <li className='waitingList'>{name}</li>))\r\n                if((auth[2].length >= 3 && auth[7] === 'Public') || auth[2].length == 6){\r\n                    Countdown()\r\n                    setClock(true)\r\n                }  \r\n            }\r\n        }\r\n    },[auth])\r\n\r\n    function Countdown(){\r\n        clearInterval(timerId1.current)\r\n\r\n        timerId1.current = setInterval(() => {\r\n          \r\n            setTime(prev => prev - 1)\r\n        },1000)\r\n        return() => clearInterval(timerId1.current) \r\n    }\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GameWaitingPageCreator'){\r\n        if(time <= 0){\r\n            StartGame();\r\n        }\r\n      }\r\n    }\r\n  },[time])\r\n\r\n\r\n    const StartGame = () =>{\r\n        if(userlist.length >= 3 ){\r\n            const payLoad = {\r\n                \"method\": \"start\",\r\n                \"gameId\" : auth[1]\r\n            }\r\n            ws.send(JSON.stringify(payLoad))\r\n        }else{\r\n            alert(\"Not enough players to start\")\r\n        }\r\n        \r\n    }\r\n    return (location.pathname === '/GameWaitingPageCreator')\r\n    ? (\r\n        <div className=\"App\" style={{ height: Height}}>\r\n        <h1 className=\"App-header\">\r\n            Acronym for me\r\n        </h1>\r\n        <div className= \"usercode\">Game Code: {auth[1]}</div>\r\n\r\n        <div className= \"usercode\">Player List</div>\r\n        <ul >{userlist}</ul>\r\n        <button type=\"button\" className=\"App-button\" onClick={() =>StartGame()} >Start the game</button>\r\n        {clock && <div className='usercode'>Game Starting in {time}</div>}\r\n        </div>\r\n        \r\n    ): null;\r\n}\r\n\r\nexport default GameWaitingPageCreator;","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\pages\\GameWaitingPageJoin.jsx",["90","91","92","93","94","95","96","97","98"],[],"import logo from './4me.png';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport react, {useEffect, useState } from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nlet ws = new WebSocket(\"ws://localhost:9090\")\r\nlet x = 1;\r\n\r\nconst GameWaitingPageJoin = ({location}) => {\r\n\r\n    const { auth } = useAuth();\r\n    const [userlist, setList] = useState();\r\n    const [Height, setHeight] = useState('100hv');\r\n    const [time, setTime] = useState(30);\r\n    const [clock, setClock] = useState(false);\r\n    const navigate = useNavigate();\r\n    const checkPlayerCount = () => {\r\n        const payLoad = {\r\n            \"method\": \"count\",\r\n            \"gameId\": auth[1]\r\n        }\r\n        ws.send(JSON.stringify(payLoad))\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(location.pathname === '/GameWaitingPageJoin'){\r\n            if(auth[1] == null){\r\n                navigate('/');\r\n            }else{\r\n                const serverlist = [];\r\n                auth[2].forEach(c =>{\r\n                    serverlist.push(c.clientName);                \r\n                })\r\n                setList(serverlist.map(name => <li className='waitingList'>{name}</li>))\r\n                if((auth[2].length >= 3 && auth[3] === 'Public') || auth[2].length == 6){\r\n                    setTime(time - 1);\r\n                    setClock(true)\r\n                }\r\n            }\r\n            \r\n        }\r\n    },[auth])\r\n\r\n    useEffect(() =>{\r\n        if(location.pathname === '/GameWaitingPageJoin'){\r\n            if(auth[1] == null){\r\n                navigate('/');\r\n            }else{\r\n                if((auth[2].length >= 3 && auth[3] === 'Public') || auth[2].length == 6){\r\n                    setTimeout(() => {\r\n                        if(time >= 0){\r\n                            setTime(time - 1);\r\n                        }\r\n                    }, 1000)\r\n                }\r\n            }\r\n        }\r\n    },[time])\r\n\r\n    return (location.pathname === '/GameWaitingPageJoin')\r\n    ? (\r\n        <div className=\"App\" style={{ height: Height}}>\r\n        <h1 className=\"App-header\">\r\n            Acronym for me\r\n        </h1>\r\n        <div className= \"usercode\">Game Code: {auth[1]}</div>\r\n        <div className= \"usercode\">Player List</div>\r\n        <ul >{userlist}</ul>\r\n        {clock && <div className='usercode'>Game Starting in {time}</div>}\r\n        </div>\r\n        \r\n    ): null;\r\n}\r\n\r\nexport default GameWaitingPageJoin;","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\contexts\\WSContext.js",[],[],"D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\pages\\GamePage.jsx",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],[],"import logo from './4me.png';\r\nimport Red from '../Images/RedPerson.png';\r\nimport Green from '../Images/GreenPerson.png';\r\nimport Blue from '../Images/BluePerson.png';\r\nimport Yellow from '../Images/YellowPerson.png';\r\nimport Orange from '../Images/OrangePerson.png';\r\nimport Purple from '../Images/PurplePerson.png';\r\nimport RedT from '../Images/RedPersonTurn.png';\r\nimport GreenT from '../Images/GreenPersonTurn.png';\r\nimport BlueT from '../Images/BluePersonTurn.png';\r\nimport YellowT from '../Images/YellowPersonTurn.png';\r\nimport OrangeT from '../Images/OrangePersonTurn.png';\r\nimport PurpleT from '../Images/PurplePersonTurn.png';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport react, {useEffect, useState, useRef} from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nconst ws = new WebSocket(\"ws://localhost:9090\")\r\n\r\nlet shuffledID = []\r\nlet wordlist = [];\r\nconst GamePage = ({location}) => {\r\n  let ImageList = []\r\n\r\n  let stage3run = false;\r\n\r\n  const { auth } = useAuth();\r\n  const [gameStage, setGame] = useState(1);\r\n  const [userlist, setList] = useState();\r\n  const [Height, setHeight] = useState('100hv');\r\n  const navigate = useNavigate();\r\n  const [imageList, setImageList] = useState();\r\n  const [image, setImage] = useState();\r\n  const [noAnswer, setNo] = useState(false);\r\n\r\n  const [stage1, setStage1] = useState(30);\r\n  const timerId1 = useRef()\r\n  const timerId1check = useRef()\r\n \r\n  const [stage2, setStage2] = useState(60);\r\n  const timerId2 = useRef()\r\n  const timerId2check = useRef()\r\n\r\n  const [stage3, setStage3] = useState(30);\r\n  const timerId3 = useRef()\r\n  const timerId3check = useRef()\r\n\r\n  const [stage4, setStage4] = useState(5);\r\n  const [stage4run, setStage4run] = useState(false)\r\n  const [timeInBetween, setTimeInBetween] = useState(3);\r\n  const [inbetweenRoundClock, setINRClock] = useState(false)\r\n  const [acronym, setAcronym] = useState([\"\",\"\",\"\"]);\r\n  const [turn, setTurn] = useState(false);\r\n  const [mainAcronym, setMain] = useState(\"\")\r\n  const [answer, setAnswer] = useState({\r\n    response: '',\r\n  });\r\n  const [shuffled, setShuffle] = useState()\r\n  const [whoseTurn, setWho] = useState()\r\n  const [answerChoiceList, setChoiceList] = useState();\r\n  const [answerList, setAnswerList] = useState();\r\n  const [submitted, setSubmit] = useState(false)\r\n  const [roundWinner, setRoundWinner] = useState(\"\")\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAnswer({\r\n      ...answer,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        //setGame(auth[3].stage)\r\n        const serverlist = [];\r\n        let turncheck = false;\r\n        \r\n        auth[2].forEach(c =>{\r\n          serverlist.push(c.clientName + \"\\nScore: \" + c.score);\r\n          if(c.colour === 'Red'){\r\n            if(c.turn === true){\r\n              ImageList.push(RedT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Red)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Green'){\r\n            if(c.turn === true){\r\n              ImageList.push(GreenT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Green)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Blue'){\r\n            if(c.turn === true){\r\n              ImageList.push(BlueT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Blue)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Yellow'){\r\n            if(c.turn === true){\r\n              ImageList.push(YellowT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Yellow)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Orange'){\r\n            if(c.turn === true){\r\n              ImageList.push(OrangeT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Orange)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Purple'){\r\n            if(c.turn === true){\r\n              ImageList.push(PurpleT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Purple)\r\n            }\r\n            \r\n          }\r\n          if(c.turn === true && c.clientId === auth[0]){\r\n            \r\n            DeclareTurn()\r\n            turncheck = true;\r\n          }\r\n        })\r\n\r\n        \r\n        setList(serverlist.map(name => <li className='namelist'>{name}</li>))\r\n        setImage(ImageList.map(colour => (<img className='playerimg' key={colour} src= {colour} />)))\r\n        if(auth[6] === true && turncheck === true){\r\n          nextRound()\r\n        }\r\n        if(auth[6] === \"ping\"){\r\n          SendPing(auth[1],auth[0])\r\n        }\r\n        if(gameStage == 1 && auth[6] !== \"join\" && auth[6] !== \"delete\"){\r\n          wordlist = GenerateAcronym()\r\n          Stage1Clock(turncheck, wordlist)\r\n        }\r\n        if(auth[4] != gameStage){\r\n          UpdateGame(true)\r\n        }else{\r\n          UpdateGame(false)\r\n        }\r\n        \r\n      } \r\n    }\r\n},[auth])\r\n\r\nuseEffect(() => {\r\n  if(auth[1] == null){\r\n    navigate('/');\r\n  }else{\r\n    if(location.pathname === '/GamePage'){\r\n      if(gameStage == 2 && turn === false){\r\n        setSubmit(false)\r\n        setMain(auth[3])\r\n        setStage2(60)\r\n        Stage2Clock()\r\n        clearInterval(timerId1.current)\r\n      }\r\n      if(gameStage == 2 && turn === true){\r\n        clearInterval(timerId1.current)\r\n      }\r\n      if(gameStage == 3){\r\n        let answers = []\r\n        let shuffl1 = []\r\n        auth[2].forEach(c => {\r\n          if(c.answer !== \"\"){\r\n            answers.push([c.answer, c.clientId]);\r\n          }\r\n        })\r\n        shuffl1 = answers.map(value => ({ value, sort: Math.random() })).sort((a, b) => a.sort - b.sort).map(({ value }) => value)\r\n        let shuffledA = [];\r\n        setShuffle(shuffl1)\r\n        for(let i = 0; i < shuffl1.length; i++){\r\n          shuffledA.push(shuffl1[i][0])\r\n          shuffledID.push(shuffl1[i][1])\r\n        }\r\n        if(shuffledA.length === 0){\r\n          blankAnswers()\r\n        }else{\r\n        setNo(false)\r\n        setID(shuffledID)\r\n        setChoiceList(shuffledA.map(name => <button className=\"acronymButton2\" onClick={() =>SelectAnswer(name, shuffledA.findIndex(x => x === name))} >{name}</button>))\r\n        setAnswerList(shuffledA.map(name => <li className=\"answerslist\">{name}</li>))\r\n        if(turn){\r\n          Stage3Clock()\r\n        }\r\n        }\r\n        \r\n        \r\n        \r\n      }\r\n      if(gameStage == 4){\r\n        \r\n        FinalStage()\r\n        if(turn === true){\r\n          SetINRC()\r\n        }\r\n        \r\n      }\r\n      if(gameStage == 5){\r\n        if(turn === true){\r\n          reset()\r\n        }\r\n        \r\n      }\r\n    }\r\n  }\r\n},[gameStage])\r\n\r\n  function FinalStage(){\r\n    setMain(auth[3])\r\n    setRoundWinner(auth[5])\r\n    setTimeInBetween(timeInBetween - 1);\r\n    setINRClock(true)\r\n    setNo(false)\r\n    clearInterval(timerId3.current)\r\n    setStage3(30)\r\n  }\r\n\r\n  function UpdateGame(update){\r\n    if(update){\r\n      setGame(auth[4])\r\n    }\r\n\r\n  }\r\n  function Stage1Clock(turncheck){\r\n    if((turncheck === true || turn === true) && gameStage === 1){\r\n      clearInterval(timerId1.current)\r\n\r\n      timerId1.current = setInterval(() => {\r\n        \r\n          setStage1(prev => prev - 1)\r\n      },1000)\r\n      return() => clearInterval(timerId1.current) \r\n    }else{\r\n      clearInterval(timerId1.current) \r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage1 <=0){\r\n          clearInterval(timerId1.current)\r\n          setStage1(30)\r\n          SelectAcronym(wordlist[Math.floor(Math.random()*3)])\r\n\r\n        }\r\n      }\r\n    }\r\n  },[stage1])\r\n\r\n\r\n  function Stage2Clock(){\r\n    if(!turn){\r\n      clearInterval(timerId2.current)\r\n      timerId2.current = setInterval(() => {\r\n        setStage2(prev => prev - 1)\r\n      },1000)\r\n      return() => clearInterval(timerId2.current)\r\n    }else{\r\n      setStage2(60)\r\n      clearInterval(timerId2.current)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage2 <=0){\r\n          clearInterval(timerId2.current)\r\n          setStage2(60)\r\n          SubmitAcronymTimeout()\r\n        }\r\n      }\r\n    }\r\n  },[stage2])\r\n\r\n  function Stage3Clock(){\r\n    \r\n    if(turn){\r\n      clearInterval(timerId3.current)\r\n      timerId3.current = setInterval(() => {\r\n        setStage3(prev => prev - 1)\r\n      },1000)\r\n      return() => clearInterval(timerId3.current)\r\n    }else{\r\n      setStage3(30)\r\n      clearInterval(timerId3.current)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage3 <=0){\r\n          clearInterval(timerId3.current)\r\n          setStage3(30)\r\n          let shuffledIndex = Math.floor(Math.random()*(shuffled.length-1))\r\n          SelectAnswer(shuffled[shuffledIndex][0], shuffledIndex)\r\n        }\r\n      }\r\n    }\r\n  },[stage3])\r\n\r\n  function blankAnswers(){\r\n    setNo(true)\r\n    const clock= setInterval(() => {\r\n      if(turn){\r\n        nextRound()\r\n      }\r\n      clearInterval(clock)\r\n    },3000)\r\n    return() => clearInterval(clock)\r\n  }\r\n\r\n  function setID(list){\r\n    shuffledID = list;\r\n  }\r\n\r\n  function SetINRC(){\r\n    setTimeout(() => {\r\n      setINRClock(false)\r\n      setTimeInBetween(3)\r\n      nextRound()\r\n      setTurn(false)\r\n      setSubmit(false)\r\n    }, 3000)\r\n    \r\n    \r\n  }\r\n\r\n  function DeclareTurn(){\r\n    setTurn(true)\r\n  }\r\n\r\n  function GenerateAcronym(){\r\n    let letter;\r\n    let word3 = \"\", word4 = \"\", word5 = \"\";\r\n    for(let i = 3; i<6; i++){\r\n      for(let j = 0; j<i; j++){\r\n        letter = {\"0\": \"A\", \"1\": \"B\", \"2\": \"C\", \"3\": \"D\",  \"4\": \"E\", \"5\": \"F\", \"6\": \"G\", \"7\": \"H\", \"8\": \"I\",  \"9\": \"J\", \"10\": \"K\", \"11\": \"L\", \"12\": \"M\", \"13\": \"N\",  \"14\": \"O\", \"15\": \"P\", \"16\": \"Q\", \"17\": \"R\", \"18\": \"S\",  \"19\": \"T\", \"20\": \"U\", \"21\": \"V\", \"22\": \"W\", \"23\": \"X\", \"24\" : \"Y\", \"25\" : \"Z\"}[Math.floor(Math.random()*25)];\r\n        if(i == 3){\r\n          word3 += letter;\r\n        }\r\n        if(i == 4){\r\n          word4 += letter;\r\n        }\r\n        if(i == 5){\r\n          word5 += letter;\r\n          }\r\n        }\r\n      }\r\n    setAcronym([word3, word4, word5])\r\n    return([word3, word4, word5])\r\n  }\r\n  \r\n  function SelectAcronym(Word){\r\n    setStage1(30)\r\n    clearInterval(timerId1.current)\r\n    const payLoad = {\r\n      \"method\": \"select\",\r\n      \"gameId\" : auth[1],\r\n      \"acronym\" : Word\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n  }\r\n\r\n  function nextRound(){\r\n    const payLoad = {\r\n      \"method\": \"round\",\r\n      \"gameId\" : auth[1],\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n    ImageList = [];\r\n    setTurn(false)\r\n    setNo(false)\r\n  }\r\n\r\n  function reset(){\r\n    setTimeout(() => {\r\n      const payLoad = {\r\n        \"method\": \"reset\",\r\n        \"gameId\" : auth[1],\r\n      }\r\n      ws.send(JSON.stringify(payLoad))\r\n      setTurn(false)\r\n      setSubmit(false)\r\n      ImageList = [];\r\n    }, 5000)\r\n  }\r\n\r\n  function SelectAnswer(Word, index){\r\n    \r\n    const id = shuffledID[index]\r\n    const payLoad = {\r\n      \"method\": \"point\",\r\n      \"gameId\" : auth[1],\r\n      \"user\" : id,\r\n      \"acronym\" : Word\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n  }\r\n\r\n  \r\n\r\n  function SubmitAcronym(Word){\r\n    const answercheck = Word.trim().split(\" \")\r\n    let check = 0;\r\n    setStage2(60)\r\n    clearInterval(timerId2.current)\r\n    setAnswer({response: '',})\r\n    if(answercheck.length == mainAcronym.length){\r\n      for(let i = 0; i<mainAcronym.length; i++){\r\n        if(answercheck[i][0].toLowerCase() === mainAcronym[i].toLowerCase()){\r\n          check ++;\r\n        }\r\n      }\r\n      if(check == mainAcronym.length){\r\n        const payLoad = {\r\n          \"method\": \"submit\",\r\n          \"gameId\" : auth[1],\r\n          \"acronym\" : Word,\r\n          \"clientId\" : auth[0]\r\n        }\r\n        ws.send(JSON.stringify(payLoad))\r\n        setSubmit(true);\r\n      }else{\r\n        alert(\"this is not an acronym of \" + mainAcronym)\r\n      }\r\n      \r\n    }else{\r\n      alert(\"this is not an acronym of \" + mainAcronym)\r\n    }\r\n    \r\n  }\r\n\r\n  function SubmitAcronymTimeout(){\r\n    setStage2(60)\r\n    setAnswer({response: '',})\r\n    const payLoad = {\r\n      \"method\": \"submit\",\r\n      \"gameId\" : auth[1],\r\n      \"acronym\" : \"\",\r\n      \"clientId\" : auth[0]\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n    setSubmit(true);\r\n  }\r\n\r\n  function SendPing( Id, cId){\r\n    const payLoad = {\r\n      \"method\": \"submit\",\r\n      \"gameId\" : Id,\r\n      \"acronym\" : \"\",\r\n      \"clientId\" : cId\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n  }\r\n\r\n  return (location.pathname === '/GamePage')\r\n  ? (\r\n    <div className=\"App\" style={{ height: Height}}>\r\n      <h1 className=\"App-header\">\r\n        Acronym for me\r\n      </h1>\r\n      <div className= \"usercode\">Game Code: {auth[1]}</div>\r\n      {(gameStage == 1 && turn === true) &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\"> Pick an accronym </div>\r\n        <ul>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[0])}> {acronym[0]}</button>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[1])}> {acronym[1]} </button>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[2])}> {acronym[2]} </button>\r\n        </ul>\r\n          <div className = \"timer\"> Time Left to choose {stage1} </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 1 && turn === false) &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\"> Waiting for {whoseTurn} to Pick an Acronym </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 2 && turn !== true && submitted === false) &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\"> Fill out an acronym for {mainAcronym} </div>\r\n          <input\r\n            className = \"gameTextbox\"\r\n            type=\"text\"\r\n            id = \"textbox\"\r\n            name=\"response\"\r\n            value={answer.response}\r\n            onChange={handleChange}\r\n            />\r\n            <div> </div>\r\n            <button type=\"button\" className=\"submitButton\" onClick={() =>SubmitAcronym(answer.response)}> Submit </button>\r\n            <div className = \"timer\"> Time left to make an acronym {stage2} </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 2 && turn === true) &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\"> Waiting for other players to make their acronym </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 3 && turn === true && noAnswer === false) &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\"> Pick Your Favourite </div>\r\n        <ul className=\"list\">\r\n          {answerChoiceList}\r\n        </ul>\r\n        <div className = \"timer\"> Time Left to choose {stage3} </div>\r\n        </div>\r\n      }\r\n\r\n      {(gameStage == 3 && turn === false && noAnswer === false) &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\"> These are your answers </div>\r\n        <ul className=\"answerlist\">\r\n          {answerList}\r\n        </ul>\r\n        </div>\r\n      }\r\n      {(gameStage == 3 && noAnswer === true) &&\r\n      <div className = \"displaycontainer\">\r\n      <div className = \"instructions\"> No one answered so no points awarded </div>\r\n      </div>      \r\n      }\r\n      {gameStage == 4 &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\">{roundWinner} won the round with the acronym {mainAcronym}</div>\r\n        </div>\r\n      }\r\n      {gameStage == 5 &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\">{roundWinner} Wins  the Game</div>\r\n        </div>\r\n      }\r\n      <div className= 'playercontainer'>\r\n      <ul className=\"list\">\r\n        {userlist}\r\n      </ul>\r\n      <ul>\r\n        {image}\r\n      </ul>\r\n      </div>\r\n      \r\n\r\n    </div>\r\n  ): null;\r\n}\r\n\r\nexport default GamePage;","D:\\BIGBOI\\Documents\\Acronymgame\\acronym-game-site\\acronymgame\\src\\pages\\Location.jsx",["140"],[],{"ruleId":"141","severity":1,"message":"142","line":2,"column":17,"nodeType":"143","messageId":"144","endLine":2,"endColumn":25},{"ruleId":"141","severity":1,"message":"145","line":2,"column":27,"nodeType":"143","messageId":"144","endLine":2,"endColumn":38},{"ruleId":"141","severity":1,"message":"146","line":3,"column":36,"nodeType":"143","messageId":"144","endLine":3,"endColumn":41},{"ruleId":"141","severity":1,"message":"147","line":3,"column":43,"nodeType":"143","messageId":"144","endLine":3,"endColumn":47},{"ruleId":"141","severity":1,"message":"148","line":3,"column":49,"nodeType":"143","messageId":"144","endLine":3,"endColumn":56},{"ruleId":"141","severity":1,"message":"149","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":13},{"ruleId":"141","severity":1,"message":"150","line":10,"column":18,"nodeType":"143","messageId":"144","endLine":10,"endColumn":27},{"ruleId":"141","severity":1,"message":"151","line":4,"column":16,"nodeType":"143","messageId":"144","endLine":4,"endColumn":25},{"ruleId":"141","severity":1,"message":"150","line":10,"column":18,"nodeType":"143","messageId":"144","endLine":10,"endColumn":27},{"ruleId":"152","severity":1,"message":"153","line":29,"column":19,"nodeType":"154","messageId":"155","endLine":29,"endColumn":21},{"ruleId":"152","severity":1,"message":"156","line":37,"column":21,"nodeType":"154","messageId":"155","endLine":37,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":45,"column":19,"nodeType":"154","messageId":"155","endLine":45,"endColumn":21},{"ruleId":"152","severity":1,"message":"156","line":54,"column":21,"nodeType":"154","messageId":"155","endLine":54,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":63,"column":26,"nodeType":"154","messageId":"155","endLine":63,"endColumn":28},{"ruleId":"152","severity":1,"message":"156","line":74,"column":21,"nodeType":"154","messageId":"155","endLine":74,"endColumn":23},{"ruleId":"141","severity":1,"message":"157","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"141","severity":1,"message":"149","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":13},{"ruleId":"141","severity":1,"message":"150","line":11,"column":20,"nodeType":"143","messageId":"144","endLine":11,"endColumn":29},{"ruleId":"141","severity":1,"message":"158","line":17,"column":11,"nodeType":"143","messageId":"144","endLine":17,"endColumn":27},{"ruleId":"152","severity":1,"message":"156","line":36,"column":84,"nodeType":"154","messageId":"155","endLine":36,"endColumn":86},{"ruleId":"159","severity":1,"message":"160","line":42,"column":7,"nodeType":"161","endLine":42,"endColumn":13,"suggestions":"162"},{"ruleId":"159","severity":1,"message":"163","line":64,"column":5,"nodeType":"161","endLine":64,"endColumn":11,"suggestions":"164"},{"ruleId":"141","severity":1,"message":"157","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"141","severity":1,"message":"149","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":13},{"ruleId":"141","severity":1,"message":"165","line":6,"column":5,"nodeType":"143","messageId":"144","endLine":6,"endColumn":6},{"ruleId":"141","severity":1,"message":"150","line":12,"column":20,"nodeType":"143","messageId":"144","endLine":12,"endColumn":29},{"ruleId":"141","severity":1,"message":"158","line":16,"column":11,"nodeType":"143","messageId":"144","endLine":16,"endColumn":27},{"ruleId":"152","severity":1,"message":"156","line":34,"column":84,"nodeType":"154","messageId":"155","endLine":34,"endColumn":86},{"ruleId":"159","severity":1,"message":"166","line":41,"column":7,"nodeType":"161","endLine":41,"endColumn":13,"suggestions":"167"},{"ruleId":"152","severity":1,"message":"156","line":48,"column":84,"nodeType":"154","messageId":"155","endLine":48,"endColumn":86},{"ruleId":"159","severity":1,"message":"168","line":57,"column":7,"nodeType":"161","endLine":57,"endColumn":13,"suggestions":"169"},{"ruleId":"141","severity":1,"message":"157","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"141","severity":1,"message":"149","line":15,"column":8,"nodeType":"143","messageId":"144","endLine":15,"endColumn":13},{"ruleId":"141","severity":1,"message":"170","line":24,"column":7,"nodeType":"143","messageId":"144","endLine":24,"endColumn":16},{"ruleId":"141","severity":1,"message":"150","line":29,"column":18,"nodeType":"143","messageId":"144","endLine":29,"endColumn":27},{"ruleId":"141","severity":1,"message":"171","line":31,"column":10,"nodeType":"143","messageId":"144","endLine":31,"endColumn":19},{"ruleId":"141","severity":1,"message":"172","line":31,"column":21,"nodeType":"143","messageId":"144","endLine":31,"endColumn":33},{"ruleId":"141","severity":1,"message":"173","line":37,"column":9,"nodeType":"143","messageId":"144","endLine":37,"endColumn":22},{"ruleId":"141","severity":1,"message":"174","line":41,"column":9,"nodeType":"143","messageId":"144","endLine":41,"endColumn":22},{"ruleId":"141","severity":1,"message":"175","line":45,"column":9,"nodeType":"143","messageId":"144","endLine":45,"endColumn":22},{"ruleId":"141","severity":1,"message":"176","line":47,"column":10,"nodeType":"143","messageId":"144","endLine":47,"endColumn":16},{"ruleId":"141","severity":1,"message":"177","line":47,"column":18,"nodeType":"143","messageId":"144","endLine":47,"endColumn":27},{"ruleId":"141","severity":1,"message":"178","line":48,"column":10,"nodeType":"143","messageId":"144","endLine":48,"endColumn":19},{"ruleId":"141","severity":1,"message":"179","line":48,"column":21,"nodeType":"143","messageId":"144","endLine":48,"endColumn":33},{"ruleId":"141","severity":1,"message":"180","line":50,"column":10,"nodeType":"143","messageId":"144","endLine":50,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":146,"column":43,"nodeType":"183","endLine":146,"endColumn":99},{"ruleId":"152","severity":1,"message":"156","line":153,"column":22,"nodeType":"154","messageId":"155","endLine":153,"endColumn":24},{"ruleId":"152","severity":1,"message":"153","line":157,"column":20,"nodeType":"154","messageId":"155","endLine":157,"endColumn":22},{"ruleId":"159","severity":1,"message":"184","line":165,"column":3,"nodeType":"161","endLine":165,"endColumn":9,"suggestions":"185"},{"ruleId":"152","severity":1,"message":"156","line":172,"column":20,"nodeType":"154","messageId":"155","endLine":172,"endColumn":22},{"ruleId":"152","severity":1,"message":"156","line":179,"column":20,"nodeType":"154","messageId":"155","endLine":179,"endColumn":22},{"ruleId":"152","severity":1,"message":"156","line":182,"column":20,"nodeType":"154","messageId":"155","endLine":182,"endColumn":22},{"ruleId":"152","severity":1,"message":"156","line":212,"column":20,"nodeType":"154","messageId":"155","endLine":212,"endColumn":22},{"ruleId":"152","severity":1,"message":"156","line":220,"column":20,"nodeType":"154","messageId":"155","endLine":220,"endColumn":22},{"ruleId":"159","severity":1,"message":"186","line":228,"column":3,"nodeType":"161","endLine":228,"endColumn":14,"suggestions":"187"},{"ruleId":"159","severity":1,"message":"188","line":275,"column":5,"nodeType":"161","endLine":275,"endColumn":13,"suggestions":"189"},{"ruleId":"159","severity":1,"message":"190","line":303,"column":5,"nodeType":"161","endLine":303,"endColumn":13,"suggestions":"191"},{"ruleId":"159","severity":1,"message":"192","line":332,"column":5,"nodeType":"161","endLine":332,"endColumn":13,"suggestions":"193"},{"ruleId":"152","severity":1,"message":"156","line":371,"column":14,"nodeType":"154","messageId":"155","endLine":371,"endColumn":16},{"ruleId":"152","severity":1,"message":"156","line":374,"column":14,"nodeType":"154","messageId":"155","endLine":374,"endColumn":16},{"ruleId":"152","severity":1,"message":"156","line":377,"column":14,"nodeType":"154","messageId":"155","endLine":377,"endColumn":16},{"ruleId":"152","severity":1,"message":"156","line":441,"column":27,"nodeType":"154","messageId":"155","endLine":441,"endColumn":29},{"ruleId":"152","severity":1,"message":"156","line":447,"column":16,"nodeType":"154","messageId":"155","endLine":447,"endColumn":18},{"ruleId":"152","severity":1,"message":"156","line":496,"column":19,"nodeType":"154","messageId":"155","endLine":496,"endColumn":21},{"ruleId":"152","severity":1,"message":"156","line":507,"column":19,"nodeType":"154","messageId":"155","endLine":507,"endColumn":21},{"ruleId":"152","severity":1,"message":"156","line":512,"column":19,"nodeType":"154","messageId":"155","endLine":512,"endColumn":21},{"ruleId":"152","severity":1,"message":"156","line":528,"column":19,"nodeType":"154","messageId":"155","endLine":528,"endColumn":21},{"ruleId":"152","severity":1,"message":"156","line":533,"column":19,"nodeType":"154","messageId":"155","endLine":533,"endColumn":21},{"ruleId":"152","severity":1,"message":"156","line":543,"column":19,"nodeType":"154","messageId":"155","endLine":543,"endColumn":21},{"ruleId":"152","severity":1,"message":"156","line":551,"column":19,"nodeType":"154","messageId":"155","endLine":551,"endColumn":21},{"ruleId":"152","severity":1,"message":"156","line":556,"column":18,"nodeType":"154","messageId":"155","endLine":556,"endColumn":20},{"ruleId":"152","severity":1,"message":"156","line":561,"column":18,"nodeType":"154","messageId":"155","endLine":561,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":9,"column":16,"nodeType":"154","messageId":"155","endLine":9,"endColumn":18},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'react' is defined but never used.","'setHeight' is assigned a value but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'logo' is defined but never used.","'checkPlayerCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.pathname' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["194"],"React Hook useEffect has missing dependencies: 'StartGame', 'auth', 'location.pathname', and 'navigate'. Either include them or remove the dependency array.",["195"],"'x' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.pathname', 'navigate', and 'time'. Either include them or remove the dependency array. You can also do a functional update 'setTime(t => ...)' if you only need 'time' in the 'setTime' call.",["196"],"React Hook useEffect has missing dependencies: 'auth', 'location.pathname', and 'navigate'. Either include them or remove the dependency array.",["197"],"'stage3run' is assigned a value but never used.","'imageList' is assigned a value but never used.","'setImageList' is assigned a value but never used.","'timerId1check' is assigned a value but never used.","'timerId2check' is assigned a value but never used.","'timerId3check' is assigned a value but never used.","'stage4' is assigned a value but never used.","'setStage4' is assigned a value but never used.","'stage4run' is assigned a value but never used.","'setStage4run' is assigned a value but never used.","'inbetweenRoundClock' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'ImageList', 'Stage1Clock', 'UpdateGame', 'gameStage', 'location.pathname', 'navigate', and 'nextRound'. Either include them or remove the dependency array.",["198"],"React Hook useEffect has missing dependencies: 'FinalStage', 'SelectAnswer', 'SetINRC', 'Stage2Clock', 'Stage3Clock', 'auth', 'blankAnswers', 'location.pathname', 'navigate', 'reset', and 'turn'. Either include them or remove the dependency array.",["199"],"React Hook useEffect has missing dependencies: 'SelectAcronym', 'auth', 'location.pathname', and 'navigate'. Either include them or remove the dependency array.",["200"],"React Hook useEffect has missing dependencies: 'SubmitAcronymTimeout', 'auth', 'location.pathname', and 'navigate'. Either include them or remove the dependency array.",["201"],"React Hook useEffect has missing dependencies: 'SelectAnswer', 'auth', 'location.pathname', 'navigate', and 'shuffled'. Either include them or remove the dependency array.",["202"],{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"207","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [auth, location.pathname, navigate]",{"range":"220","text":"221"},"Update the dependencies array to be: [StartGame, auth, location.pathname, navigate, time]",{"range":"222","text":"223"},"Update the dependencies array to be: [auth, location.pathname, navigate, time]",{"range":"224","text":"225"},{"range":"226","text":"225"},"Update the dependencies array to be: [ImageList, Stage1Clock, UpdateGame, auth, gameStage, location.pathname, navigate, nextRound]",{"range":"227","text":"228"},"Update the dependencies array to be: [FinalStage, SelectAnswer, SetINRC, Stage2Clock, Stage3Clock, auth, blankAnswers, gameStage, location.pathname, navigate, reset, turn]",{"range":"229","text":"230"},"Update the dependencies array to be: [SelectAcronym, auth, location.pathname, navigate, stage1]",{"range":"231","text":"232"},"Update the dependencies array to be: [SubmitAcronymTimeout, auth, location.pathname, navigate, stage2]",{"range":"233","text":"234"},"Update the dependencies array to be: [SelectAnswer, auth, location.pathname, navigate, shuffled, stage3]",{"range":"235","text":"236"},[1393,1399],"[auth, location.pathname, navigate]",[1875,1881],"[StartGame, auth, location.pathname, navigate, time]",[1389,1395],"[auth, location.pathname, navigate, time]",[1894,1900],[5148,5154],"[ImageList, Stage1Clock, UpdateGame, auth, gameStage, location.pathname, navigate, nextRound]",[6863,6874],"[FinalStage, SelectAnswer, SetINRC, Stage2Clock, Stage3Clock, auth, blankAnswers, gameStage, location.pathname, navigate, reset, turn]",[7892,7900],"[SelectAcronym, auth, location.pathname, navigate, stage1]",[8509,8517],"[SubmitAcronymTimeout, auth, location.pathname, navigate, stage2]",[9239,9247],"[SelectAnswer, auth, location.pathname, navigate, shuffled, stage3]"]