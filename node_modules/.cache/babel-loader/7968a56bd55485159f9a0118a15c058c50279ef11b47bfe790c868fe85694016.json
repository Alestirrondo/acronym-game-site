{"ast":null,"code":"var _jsxFileName = \"D:\\\\BIGBOI\\\\Documents\\\\Acronymgame\\\\acronym-game-site\\\\acronymgame\\\\src\\\\pages\\\\GamePage.jsx\",\n  _s = $RefreshSig$();\nimport logo from './4me.png';\nimport Red from '../Images/RedPerson.png';\nimport Green from '../Images/GreenPerson.png';\nimport Blue from '../Images/BluePerson.png';\nimport Yellow from '../Images/YellowPerson.png';\nimport Orange from '../Images/OrangePerson.png';\nimport Purple from '../Images/PurplePerson.png';\nimport RedT from '../Images/RedPersonTurn.png';\nimport GreenT from '../Images/GreenPersonTurn.png';\nimport BlueT from '../Images/BluePersonTurn.png';\nimport YellowT from '../Images/YellowPersonTurn.png';\nimport OrangeT from '../Images/OrangePersonTurn.png';\nimport PurpleT from '../Images/PurplePersonTurn.png';\nimport { useNavigate } from 'react-router-dom';\nimport react, { useEffect, useState, useRef } from 'react';\nimport useAuth from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ws = new WebSocket(\"ws://localhost:9090\");\nconst GamePage = _ref => {\n  _s();\n  let {\n    location\n  } = _ref;\n  let ImageList = [];\n  let shuffledID = [];\n  const {\n    auth\n  } = useAuth();\n  const [gameStage, setGame] = useState(1);\n  const [userlist, setList] = useState();\n  const [Height, setHeight] = useState('100hv');\n  const navigate = useNavigate();\n  const [imageList, setImageList] = useState();\n  const [image, setImage] = useState();\n  const [noAnswer, setNo] = useState();\n  const [stage1, setStage1] = useState(30);\n  const timerId1 = useRef();\n  const [stage1run, setStage1run] = useState(false);\n  const timerId1check = useRef();\n  const [stage2, setStage2] = useState(60);\n  const [stage2run, setStage2run] = useState(false);\n  const [stage3, setStage3] = useState(5);\n  const [stage3run, setStage3run] = useState(false);\n  const [stage4, setStage4] = useState(5);\n  const [stage4run, setStage4run] = useState(false);\n  const [timeInBetween, setTimeInBetween] = useState(5);\n  const [inbetweenRoundClock, setINRClock] = useState(false);\n  const [acronym, setAcronym] = useState([\"\", \"\", \"\"]);\n  const [turn, setTurn] = useState(false);\n  const [mainAcronym, setMain] = useState(\"\");\n  const [answer, setAnswer] = useState({\n    response: ''\n  });\n  const [whoseTurn, setWho] = useState();\n  const [answerChoiceList, setChoiceList] = useState();\n  const [answerList, setAnswerList] = useState();\n  const [submitted, setSubmit] = useState(false);\n  const [roundWinner, setRoundWinner] = useState(\"\");\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAnswer({\n      ...answer,\n      [name]: value\n    });\n  };\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        //setGame(auth[3].stage)\n        const serverlist = [];\n        let turncheck = false;\n        let wordlist = [];\n        auth[2].forEach(c => {\n          serverlist.push(c.clientName + \"\\nScore: \" + c.score);\n          if (c.colour === 'Red') {\n            if (c.turn === true) {\n              ImageList.push(RedT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Red);\n            }\n          }\n          if (c.colour === 'Green') {\n            if (c.turn === true) {\n              ImageList.push(GreenT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Green);\n            }\n          }\n          if (c.colour === 'Blue') {\n            if (c.turn === true) {\n              ImageList.push(BlueT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Blue);\n            }\n          }\n          if (c.colour === 'Yellow') {\n            if (c.turn === true) {\n              ImageList.push(YellowT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Yellow);\n            }\n          }\n          if (c.colour === 'Orange') {\n            if (c.turn === true) {\n              ImageList.push(OrangeT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Orange);\n            }\n          }\n          if (c.colour === 'Purple') {\n            if (c.turn === true) {\n              ImageList.push(PurpleT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Purple);\n            }\n          }\n          if (c.turn === true && c.clientId === auth[0]) {\n            DeclareTurn();\n            turncheck = true;\n          }\n        });\n        setList(serverlist.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"namelist\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 40\n        }, this)));\n        setImage(ImageList.map(colour => /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"playerimg\",\n          src: colour\n        }, colour, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 43\n        }, this)));\n        if (gameStage == 1) {\n          wordlist = GenerateAcronym();\n          Stage1Clock(turncheck, wordlist);\n        }\n      }\n    }\n  }, [auth]);\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (gameStage == 2 && turn === false) {\n          setSubmit(false);\n          setMain(auth[3]);\n          Stage2Clock();\n        }\n        if (gameStage == 3) {\n          let answers = [];\n          auth[2].forEach(c => {\n            if (c.answer !== \"\") {\n              answers.push([c.answer, c.clientId]);\n            }\n          });\n          let shuffled = answers.map(value => ({\n            value,\n            sort: Math.random()\n          })).sort((a, b) => a.sort - b.sort).map(_ref2 => {\n            let {\n              value\n            } = _ref2;\n            return value;\n          });\n          let shuffledA = [];\n          for (let i = 0; i < shuffled.length; i++) {\n            shuffledA.push(shuffled[i][0]);\n            shuffledID.push(shuffled[i][1]);\n          }\n          if (shuffledA.length === 0) {\n            blankAnswers();\n          } else {\n            setID(shuffledID);\n            setChoiceList(shuffledA.map(name => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"acronymButton2\",\n              onClick: () => SelectAnswer(name, shuffledA.findIndex(x => x === name)),\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 45\n            }, this)));\n            setAnswerList(shuffledA.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"namelist\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 45\n            }, this)));\n          }\n        }\n        if (gameStage == 4) {\n          setMain(auth[3]);\n          setRoundWinner(auth[5]);\n          setTimeInBetween(timeInBetween - 1);\n          setINRClock(true);\n          if (turn === true) {\n            SetINRC();\n          }\n        }\n        if (gameStage == 5) {\n          if (turn === true) {\n            reset();\n          }\n        }\n      }\n    }\n  }, [gameStage]);\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        SetGameStage();\n      }\n    }\n  }, [auth]);\n  function SetGameStage() {\n    setGame(auth[4]);\n    console.log(\"the game stage is \" + gameStage);\n  }\n  function Stage1Clock(turncheck, wordlist) {\n    console.log(turncheck);\n    if (turncheck === true) {\n      checkClock1(wordlist);\n      timerId1.current = setInterval(() => {\n        setStage1(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timerId1.current);\n    } else {\n      checkClock1(30);\n    }\n  }\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (stage1 <= 0) {\n          clearInterval(timerId1.current);\n          setStage1(30);\n          clearInterval(timerId1.current);\n        }\n      }\n    }\n  }, [stage1]);\n  function checkClock1(wordlist) {\n    if (!stage1run) {\n      timerId1check.current = setInterval(() => {\n        SelectAcronym(wordlist[Math.floor(Math.random() * 3)]);\n        console.log(\"the clock tiks\");\n        setStage1run(true);\n      }, 30000);\n      return () => clearInterval(timerId1check.current);\n    }\n  }\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        console.log(stage1run);\n        if (stage1run) {\n          clearInterval(timerId1check.current);\n        }\n      }\n    }\n  }, [stage1run]);\n  function Stage2Clock() {\n    checkClock2();\n    const clock = setInterval(() => {\n      setStage2(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(clock);\n  }\n  function checkClock2() {\n    const clock = setInterval(() => {\n      SubmitAcronymTimeout();\n      clearInterval(clock);\n    }, 60000);\n    return () => clearInterval(clock);\n  }\n  function blankAnswers() {\n    setNo(true);\n    const clock = setInterval(() => {\n      if (turn === true) {\n        nextRound();\n        setNo(false);\n      }\n      clearInterval(clock);\n    }, 5000);\n    return () => clearInterval(clock);\n  }\n  function setID(list) {\n    shuffledID = list;\n  }\n  function SetINRC() {\n    setTimeout(() => {\n      setINRClock(false);\n      setTimeInBetween(5);\n      nextRound();\n      setTurn(false);\n      setSubmit(false);\n    }, 5000);\n  }\n  function DeclareTurn() {\n    setTurn(true);\n  }\n  function GenerateAcronym() {\n    let letter;\n    let word3 = \"\",\n      word4 = \"\",\n      word5 = \"\";\n    for (let i = 3; i < 6; i++) {\n      for (let j = 0; j < i; j++) {\n        letter = {\n          \"0\": \"A\",\n          \"1\": \"B\",\n          \"2\": \"C\",\n          \"3\": \"D\",\n          \"4\": \"E\",\n          \"5\": \"F\",\n          \"6\": \"G\",\n          \"7\": \"H\",\n          \"8\": \"I\",\n          \"9\": \"J\",\n          \"10\": \"K\",\n          \"11\": \"L\",\n          \"12\": \"M\",\n          \"13\": \"N\",\n          \"14\": \"O\",\n          \"15\": \"P\",\n          \"16\": \"Q\",\n          \"17\": \"R\",\n          \"18\": \"S\",\n          \"19\": \"T\",\n          \"20\": \"U\",\n          \"21\": \"V\",\n          \"22\": \"W\",\n          \"23\": \"X\",\n          \"24\": \"Y\",\n          \"25\": \"Z\"\n        }[Math.floor(Math.random() * 25)];\n        if (i == 3) {\n          word3 += letter;\n        }\n        if (i == 4) {\n          word4 += letter;\n        }\n        if (i == 5) {\n          word5 += letter;\n        }\n      }\n    }\n    setAcronym([word3, word4, word5]);\n    return [word3, word4, word5];\n  }\n  function SelectAcronym(Word) {\n    setStage1(30);\n    const payLoad = {\n      \"method\": \"select\",\n      \"gameId\": auth[1],\n      \"acronym\": Word\n    };\n    ws.send(JSON.stringify(payLoad));\n  }\n  function nextRound() {\n    const payLoad = {\n      \"method\": \"round\",\n      \"gameId\": auth[1]\n    };\n    ws.send(JSON.stringify(payLoad));\n    ImageList = [];\n    setTurn(false);\n  }\n  function reset() {\n    setTimeout(() => {\n      const payLoad = {\n        \"method\": \"reset\",\n        \"gameId\": auth[1]\n      };\n      ws.send(JSON.stringify(payLoad));\n      setTurn(false);\n      setSubmit(false);\n      ImageList = [];\n    }, 5000);\n  }\n  function SelectAnswer(Word, index) {\n    const id = shuffledID[index];\n    const payLoad = {\n      \"method\": \"point\",\n      \"gameId\": auth[1],\n      \"user\": id,\n      \"acronym\": Word\n    };\n    ws.send(JSON.stringify(payLoad));\n  }\n  function SubmitAcronym(Word) {\n    const answercheck = Word.trim().split(\" \");\n    let check = 0;\n    setAnswer({\n      response: ''\n    });\n    if (answercheck.length == mainAcronym.length) {\n      for (let i = 0; i < mainAcronym.length; i++) {\n        if (answercheck[i][0].toLowerCase() === mainAcronym[i].toLowerCase()) {\n          check++;\n        }\n      }\n      if (check == mainAcronym.length) {\n        const payLoad = {\n          \"method\": \"submit\",\n          \"gameId\": auth[1],\n          \"acronym\": Word,\n          \"clientId\": auth[0]\n        };\n        ws.send(JSON.stringify(payLoad));\n        setSubmit(true);\n      } else {\n        alert(\"this is not an acronym of \" + mainAcronym);\n      }\n    } else {\n      alert(\"this is not an acronym of \" + mainAcronym);\n    }\n  }\n  function SubmitAcronymTimeout() {\n    setStage2(60);\n    setAnswer({\n      response: ''\n    });\n    const payLoad = {\n      \"method\": \"submit\",\n      \"gameId\": auth[1],\n      \"acronym\": \"\",\n      \"clientId\": auth[0]\n    };\n    ws.send(JSON.stringify(payLoad));\n    setSubmit(true);\n  }\n  return location.pathname === '/GamePage' ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      height: Height\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"App-header\",\n      children: \"Acronym for me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usercode\",\n      children: [\"Game Code: \", auth[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), gameStage == 1 && turn === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" Pick an accronym \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"acronymButton\",\n          onClick: () => SelectAcronym(acronym[0]),\n          children: [\" \", acronym[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"acronymButton\",\n          onClick: () => SelectAcronym(acronym[1]),\n          children: [\" \", acronym[1], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"acronymButton\",\n          onClick: () => SelectAcronym(acronym[2]),\n          children: [\" \", acronym[2], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [\" Time Left to choose \", stage1, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 9\n    }, this), gameStage == 1 && turn === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [\" Waiting for \", whoseTurn, \" to Pick an Acronym \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this), gameStage == 2 && turn !== true && submitted === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [\" Fill out an acronym for \", mainAcronym, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"gameTextbox\",\n        type: \"text\",\n        id: \"textbox\",\n        name: \"response\",\n        value: answer.response,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"submitButton\",\n        onClick: () => SubmitAcronym(answer.response),\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [\" Time left to make an acronym \", stage2, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }, this), gameStage == 2 && turn === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" Waiting for other players to make their acronym \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }, this), gameStage == 3 && turn === true && noAnswer === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" Pick Your Favourite \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: answerChoiceList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }, this), gameStage == 3 && turn === false && noAnswer === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" These are your answers \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: answerList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 9\n    }, this), gameStage == 3 && noAnswer === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" No one answered so no points awarded \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this), gameStage == 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [roundWinner, \" won the round with the acronym \", mainAcronym]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 9\n    }, this), gameStage == 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [roundWinner, \" Wins  the Game\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playercontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: userlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 432,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(GamePage, \"OJaVB5NJUa7NJ81bKPPiduTrYnU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["logo","Red","Green","Blue","Yellow","Orange","Purple","RedT","GreenT","BlueT","YellowT","OrangeT","PurpleT","useNavigate","react","useEffect","useState","useRef","useAuth","ws","WebSocket","GamePage","location","ImageList","shuffledID","auth","gameStage","setGame","userlist","setList","Height","setHeight","navigate","imageList","setImageList","image","setImage","noAnswer","setNo","stage1","setStage1","timerId1","stage1run","setStage1run","timerId1check","stage2","setStage2","stage2run","setStage2run","stage3","setStage3","stage3run","setStage3run","stage4","setStage4","stage4run","setStage4run","timeInBetween","setTimeInBetween","inbetweenRoundClock","setINRClock","acronym","setAcronym","turn","setTurn","mainAcronym","setMain","answer","setAnswer","response","whoseTurn","setWho","answerChoiceList","setChoiceList","answerList","setAnswerList","submitted","setSubmit","roundWinner","setRoundWinner","handleChange","e","name","value","target","pathname","serverlist","turncheck","wordlist","forEach","c","push","clientName","score","colour","clientId","DeclareTurn","map","GenerateAcronym","Stage1Clock","Stage2Clock","answers","shuffled","sort","Math","random","a","b","shuffledA","i","length","blankAnswers","setID","SelectAnswer","findIndex","x","SetINRC","reset","SetGameStage","console","log","checkClock1","current","setInterval","prev","clearInterval","SelectAcronym","floor","checkClock2","clock","SubmitAcronymTimeout","nextRound","list","setTimeout","letter","word3","word4","word5","j","Word","payLoad","send","JSON","stringify","index","id","SubmitAcronym","answercheck","trim","split","check","toLowerCase","alert","height"],"sources":["D:/BIGBOI/Documents/Acronymgame/acronym-game-site/acronymgame/src/pages/GamePage.jsx"],"sourcesContent":["import logo from './4me.png';\r\nimport Red from '../Images/RedPerson.png';\r\nimport Green from '../Images/GreenPerson.png';\r\nimport Blue from '../Images/BluePerson.png';\r\nimport Yellow from '../Images/YellowPerson.png';\r\nimport Orange from '../Images/OrangePerson.png';\r\nimport Purple from '../Images/PurplePerson.png';\r\nimport RedT from '../Images/RedPersonTurn.png';\r\nimport GreenT from '../Images/GreenPersonTurn.png';\r\nimport BlueT from '../Images/BluePersonTurn.png';\r\nimport YellowT from '../Images/YellowPersonTurn.png';\r\nimport OrangeT from '../Images/OrangePersonTurn.png';\r\nimport PurpleT from '../Images/PurplePersonTurn.png';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport react, {useEffect, useState, useRef} from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nconst ws = new WebSocket(\"ws://localhost:9090\")\r\n\r\nconst GamePage = ({location}) => {\r\n  let ImageList = []\r\n  let shuffledID = []\r\n  const { auth } = useAuth();\r\n  const [gameStage, setGame] = useState(1);\r\n  const [userlist, setList] = useState();\r\n  const [Height, setHeight] = useState('100hv');\r\n  const navigate = useNavigate();\r\n  const [imageList, setImageList] = useState();\r\n  const [image, setImage] = useState();\r\n  const [noAnswer, setNo] = useState();\r\n\r\n  const [stage1, setStage1] = useState(30);\r\n  const timerId1 = useRef()\r\n  const [stage1run, setStage1run] = useState(false)\r\n  const timerId1check = useRef()\r\n \r\n  const [stage2, setStage2] = useState(60);\r\n  const [stage2run, setStage2run] = useState(false)\r\n  const [stage3, setStage3] = useState(5);\r\n  const [stage3run, setStage3run] = useState(false)\r\n  const [stage4, setStage4] = useState(5);\r\n  const [stage4run, setStage4run] = useState(false)\r\n  const [timeInBetween, setTimeInBetween] = useState(5);\r\n  const [inbetweenRoundClock, setINRClock] = useState(false)\r\n  const [acronym, setAcronym] = useState([\"\",\"\",\"\"]);\r\n  const [turn, setTurn] = useState(false);\r\n  const [mainAcronym, setMain] = useState(\"\")\r\n  const [answer, setAnswer] = useState({\r\n    response: '',\r\n  });\r\n  const [whoseTurn, setWho] = useState()\r\n  const [answerChoiceList, setChoiceList] = useState();\r\n  const [answerList, setAnswerList] = useState();\r\n  const [submitted, setSubmit] = useState(false)\r\n  const [roundWinner, setRoundWinner] = useState(\"\")\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAnswer({\r\n      ...answer,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        //setGame(auth[3].stage)\r\n        const serverlist = [];\r\n        let turncheck = false;\r\n        let wordlist = [];\r\n        auth[2].forEach(c =>{\r\n          serverlist.push(c.clientName + \"\\nScore: \" + c.score);\r\n          if(c.colour === 'Red'){\r\n            if(c.turn === true){\r\n              ImageList.push(RedT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Red)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Green'){\r\n            if(c.turn === true){\r\n              ImageList.push(GreenT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Green)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Blue'){\r\n            if(c.turn === true){\r\n              ImageList.push(BlueT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Blue)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Yellow'){\r\n            if(c.turn === true){\r\n              ImageList.push(YellowT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Yellow)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Orange'){\r\n            if(c.turn === true){\r\n              ImageList.push(OrangeT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Orange)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Purple'){\r\n            if(c.turn === true){\r\n              ImageList.push(PurpleT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Purple)\r\n            }\r\n            \r\n          }\r\n          if(c.turn === true && c.clientId === auth[0]){\r\n            DeclareTurn()\r\n            turncheck = true;\r\n          }\r\n        })\r\n        setList(serverlist.map(name => <li className='namelist'>{name}</li>))\r\n        setImage(ImageList.map(colour => (<img className='playerimg' key={colour} src= {colour} />)))\r\n        if(gameStage == 1){\r\n          wordlist = GenerateAcronym()\r\n          Stage1Clock(turncheck, wordlist)\r\n        }\r\n        \r\n      } \r\n    }\r\n},[auth])\r\n\r\nuseEffect(() => {\r\n  if(auth[1] == null){\r\n    navigate('/');\r\n  }else{\r\n    if(location.pathname === '/GamePage'){\r\n      if(gameStage == 2 && turn === false){\r\n        setSubmit(false)\r\n        setMain(auth[3])\r\n        Stage2Clock()\r\n      }\r\n      if(gameStage == 3){\r\n        let answers = []\r\n        auth[2].forEach(c => {\r\n          if(c.answer !== \"\"){\r\n            answers.push([c.answer, c.clientId]);\r\n          }\r\n        })\r\n        let shuffled = answers.map(value => ({ value, sort: Math.random() })).sort((a, b) => a.sort - b.sort).map(({ value }) => value)\r\n        let shuffledA = [];\r\n        for(let i = 0; i < shuffled.length; i++){\r\n          shuffledA.push(shuffled[i][0])\r\n          shuffledID.push(shuffled[i][1])\r\n        }\r\n        if(shuffledA.length === 0){\r\n          blankAnswers()\r\n        }else{\r\n        setID(shuffledID)\r\n        setChoiceList(shuffledA.map(name => <button className=\"acronymButton2\" onClick={() =>SelectAnswer(name, shuffledA.findIndex(x => x === name))} >{name}</button>))\r\n        setAnswerList(shuffledA.map(name => <li className=\"namelist\">{name}</li>))\r\n        }\r\n        \r\n        \r\n        \r\n      }\r\n      if(gameStage == 4){\r\n        setMain(auth[3])\r\n        setRoundWinner(auth[5])\r\n        setTimeInBetween(timeInBetween - 1);\r\n        setINRClock(true)\r\n        if(turn === true){\r\n          SetINRC()\r\n        }\r\n        \r\n      }\r\n      if(gameStage == 5){\r\n        if(turn === true){\r\n          reset()\r\n        }\r\n        \r\n      }\r\n    }\r\n  }\r\n},[gameStage])\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  if(auth[1] == null){\r\n    navigate('/');\r\n  }else{\r\n    if(location.pathname === '/GamePage'){\r\n      SetGameStage()\r\n    }\r\n  }\r\n},[auth])\r\n\r\n  function SetGameStage(){\r\n    \r\n    setGame(auth[4])\r\n    console.log(\"the game stage is \" + gameStage)\r\n  }\r\n  function Stage1Clock(turncheck, wordlist){\r\n    console.log(turncheck)\r\n    if(turncheck === true){\r\n      checkClock1(wordlist)\r\n      timerId1.current = setInterval(() => {\r\n          setStage1(prev => prev - 1)\r\n      },1000)\r\n      return() => clearInterval(timerId1.current) \r\n    }else{\r\n      checkClock1(30)\r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage1 <=0){\r\n          clearInterval(timerId1.current)\r\n          setStage1(30)\r\n          clearInterval(timerId1.current)\r\n        }\r\n      }\r\n    }\r\n  },[stage1])\r\n\r\n  function checkClock1(wordlist){\r\n    if(!stage1run){\r\n      timerId1check.current = setInterval(() => {\r\n        SelectAcronym(wordlist[Math.floor(Math.random()*3)])\r\n        console.log(\"the clock tiks\")\r\n        setStage1run(true)\r\n        \r\n      },30000)\r\n      return() => clearInterval(timerId1check.current)\r\n    }\r\n    \r\n\r\n  }\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        console.log(stage1run)\r\n        if(stage1run){\r\n          clearInterval(timerId1check.current)\r\n        }\r\n      }\r\n    }\r\n  },[stage1run])\r\n  \r\n\r\n  function Stage2Clock(){\r\n\r\n    checkClock2()\r\n    const clock = setInterval(() => {\r\n      setStage2(prev => prev - 1)\r\n    },1000)\r\n    return() => clearInterval(clock)\r\n   \r\n  }\r\n\r\n  function checkClock2(){\r\n    const clock= setInterval(() => {\r\n      SubmitAcronymTimeout()\r\n      clearInterval(clock)\r\n    },60000)\r\n    return() => clearInterval(clock)\r\n\r\n  }\r\n\r\n  function blankAnswers(){\r\n    setNo(true)\r\n    const clock= setInterval(() => {\r\n      if(turn === true){\r\n        nextRound()\r\n        setNo(false)\r\n      }\r\n      clearInterval(clock)\r\n    },5000)\r\n    return() => clearInterval(clock)\r\n  }\r\n\r\n  function setID(list){\r\n    shuffledID = list;\r\n  }\r\n\r\n  function SetINRC(){\r\n    setTimeout(() => {\r\n      setINRClock(false)\r\n      setTimeInBetween(5)\r\n      nextRound()\r\n      setTurn(false)\r\n      setSubmit(false)\r\n    }, 5000)\r\n    \r\n    \r\n  }\r\n\r\n  function DeclareTurn(){\r\n    setTurn(true)\r\n  }\r\n\r\n  function GenerateAcronym(){\r\n    let letter;\r\n    let word3 = \"\", word4 = \"\", word5 = \"\";\r\n    for(let i = 3; i<6; i++){\r\n      for(let j = 0; j<i; j++){\r\n        letter = {\"0\": \"A\", \"1\": \"B\", \"2\": \"C\", \"3\": \"D\",  \"4\": \"E\", \"5\": \"F\", \"6\": \"G\", \"7\": \"H\", \"8\": \"I\",  \"9\": \"J\", \"10\": \"K\", \"11\": \"L\", \"12\": \"M\", \"13\": \"N\",  \"14\": \"O\", \"15\": \"P\", \"16\": \"Q\", \"17\": \"R\", \"18\": \"S\",  \"19\": \"T\", \"20\": \"U\", \"21\": \"V\", \"22\": \"W\", \"23\": \"X\", \"24\" : \"Y\", \"25\" : \"Z\"}[Math.floor(Math.random()*25)];\r\n        if(i == 3){\r\n          word3 += letter;\r\n        }\r\n        if(i == 4){\r\n          word4 += letter;\r\n        }\r\n        if(i == 5){\r\n          word5 += letter;\r\n          }\r\n        }\r\n      }\r\n    setAcronym([word3, word4, word5])\r\n    return([word3, word4, word5])\r\n  }\r\n  \r\n  function SelectAcronym(Word){\r\n    setStage1(30)\r\n    const payLoad = {\r\n      \"method\": \"select\",\r\n      \"gameId\" : auth[1],\r\n      \"acronym\" : Word\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n  }\r\n\r\n  function nextRound(){\r\n    const payLoad = {\r\n      \"method\": \"round\",\r\n      \"gameId\" : auth[1],\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n    ImageList = [];\r\n    setTurn(false)\r\n  }\r\n\r\n  function reset(){\r\n    setTimeout(() => {\r\n      const payLoad = {\r\n        \"method\": \"reset\",\r\n        \"gameId\" : auth[1],\r\n      }\r\n      ws.send(JSON.stringify(payLoad))\r\n      setTurn(false)\r\n      setSubmit(false)\r\n      ImageList = [];\r\n    }, 5000)\r\n  }\r\n\r\n  function SelectAnswer(Word, index){\r\n    const id = shuffledID[index]\r\n    const payLoad = {\r\n      \"method\": \"point\",\r\n      \"gameId\" : auth[1],\r\n      \"user\" : id,\r\n      \"acronym\" : Word\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n  }\r\n\r\n  \r\n\r\n  function SubmitAcronym(Word){\r\n    const answercheck = Word.trim().split(\" \")\r\n    let check = 0;\r\n    setAnswer({response: '',})\r\n    if(answercheck.length == mainAcronym.length){\r\n      for(let i = 0; i<mainAcronym.length; i++){\r\n        if(answercheck[i][0].toLowerCase() === mainAcronym[i].toLowerCase()){\r\n          check ++;\r\n        }\r\n      }\r\n      if(check == mainAcronym.length){\r\n        const payLoad = {\r\n          \"method\": \"submit\",\r\n          \"gameId\" : auth[1],\r\n          \"acronym\" : Word,\r\n          \"clientId\" : auth[0]\r\n        }\r\n        ws.send(JSON.stringify(payLoad))\r\n        setSubmit(true);\r\n      }else{\r\n        alert(\"this is not an acronym of \" + mainAcronym)\r\n      }\r\n      \r\n    }else{\r\n      alert(\"this is not an acronym of \" + mainAcronym)\r\n    }\r\n    \r\n  }\r\n\r\n  function SubmitAcronymTimeout(){\r\n    setStage2(60)\r\n    setAnswer({response: '',})\r\n    const payLoad = {\r\n      \"method\": \"submit\",\r\n      \"gameId\" : auth[1],\r\n      \"acronym\" : \"\",\r\n      \"clientId\" : auth[0]\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n    setSubmit(true);\r\n  }\r\n\r\n  return (location.pathname === '/GamePage')\r\n  ? (\r\n    <div className=\"App\" style={{ height: Height}}>\r\n      <h1 className=\"App-header\">\r\n        Acronym for me\r\n      </h1>\r\n      <div className= \"usercode\">Game Code: {auth[1]}</div>\r\n      {(gameStage == 1 && turn === true) &&\r\n        <div>\r\n          <div className = \"instructions\"> Pick an accronym </div>\r\n        <ul>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[0])}> {acronym[0]}</button>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[1])}> {acronym[1]} </button>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[2])}> {acronym[2]} </button>\r\n        </ul>\r\n          <div className = \"instructions\"> Time Left to choose {stage1} </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 1 && turn === false) &&\r\n        <div>\r\n          <div className = \"instructions\"> Waiting for {whoseTurn} to Pick an Acronym </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 2 && turn !== true && submitted === false) &&\r\n        <div>\r\n          <div className = \"instructions\"> Fill out an acronym for {mainAcronym} </div>\r\n          <input\r\n            className = \"gameTextbox\"\r\n            type=\"text\"\r\n            id = \"textbox\"\r\n            name=\"response\"\r\n            value={answer.response}\r\n            onChange={handleChange}\r\n            />\r\n            <div> </div>\r\n            <button type=\"button\" className=\"submitButton\" onClick={() =>SubmitAcronym(answer.response)}> Submit </button>\r\n            <div className = \"instructions\"> Time left to make an acronym {stage2} </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 2 && turn === true) &&\r\n        <div>\r\n          <div className = \"instructions\"> Waiting for other players to make their acronym </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 3 && turn === true && noAnswer === false) &&\r\n        <div>\r\n          <div className = \"instructions\"> Pick Your Favourite </div>\r\n        <ul className=\"list\">\r\n          {answerChoiceList}\r\n        </ul>\r\n        </div>\r\n      }\r\n\r\n      {(gameStage == 3 && turn === false && noAnswer === false) &&\r\n        <div>\r\n          <div className = \"instructions\"> These are your answers </div>\r\n        <ul>\r\n          {answerList}\r\n        </ul>\r\n        </div>\r\n      }\r\n      {(gameStage == 3 && noAnswer === true) &&\r\n      <div>\r\n      <div className = \"instructions\"> No one answered so no points awarded </div>\r\n      </div>      \r\n      }\r\n      {gameStage == 4 &&\r\n        <div>\r\n          <div className = \"instructions\">{roundWinner} won the round with the acronym {mainAcronym}</div>\r\n        </div>\r\n      }\r\n      {gameStage == 5 &&\r\n        <div>\r\n          <div className = \"instructions\">{roundWinner} Wins  the Game</div>\r\n        </div>\r\n      }\r\n      <div className= 'playercontainer'>\r\n      <ul className=\"list\">\r\n        {userlist}\r\n      </ul>\r\n      <ul>\r\n        {image}\r\n      </ul>\r\n      </div>\r\n      \r\n\r\n    </div>\r\n  ): null;\r\n}\r\n\r\nexport default GamePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}