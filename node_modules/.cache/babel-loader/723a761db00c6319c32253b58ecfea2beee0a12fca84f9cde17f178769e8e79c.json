{"ast":null,"code":"var _jsxFileName = \"D:\\\\BIGBOI\\\\Documents\\\\Acronymgame\\\\acronym-game-site\\\\acronymgame\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useCallback } from 'react';\nimport { useNavigate, useLocation, Route, Link, NavLink } from 'react-router-dom';\nimport HomePage from \"./pages/HomePage\";\nimport FindaGame from \"./pages/FindaGame\";\nimport GameWaitingPageJoin from \"./pages/GameWaitingPageJoin\";\nimport useAuth from './hooks/useAuth';\nimport GameWaitingPageCreator from './pages/GameWaitingPageCreator';\nimport GamePage from './pages/GamePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet clientId = null;\nconst ws = new WebSocket(\"ws://localhost:9090\");\nfunction App() {\n  _s();\n  const {\n    setAuth\n  } = useAuth();\n  ws.onmessage = message => {\n    const response = JSON.parse(message.data);\n    if (response.method === \"connect\") {\n      clientId = response.clientID;\n      console.log(\"Client id set successfully \" + clientId);\n      setAuth([clientId]);\n    }\n    if (response.method === \"create\") {\n      console.log(\"game successfully created with id \" + response.game.id);\n      const game = response.game;\n      const serverlist = [];\n      const colour = [];\n      game.clients.forEach(c => {\n        serverlist.push(c.clientName);\n        colour.push(c.colour);\n      });\n      setAuth([clientId, response.game.id, serverlist, response.game.availability, colour]);\n    }\n    if (response.method === \"RandomServer\") {\n      const game = response.game;\n      const duty = response.duty;\n      const serverlist = [];\n      const colour = [];\n      if (duty === \"Parent\") {\n        game.clients.forEach(c => {\n          serverlist.push(c.clientName);\n          colour.push(c.colour);\n        });\n        navigate('/GameWaitingPageCreator');\n      } else {\n        game.clients.forEach(c => {\n          serverlist.push(c.clientName);\n          colour.push(c.colour);\n        });\n        if (location.pathname === '/GameWaitingPageCreator') {\n          navigate('/GameWaitingPageCreator');\n        } else {\n          if (game.state === \"waiting\") {\n            navigate('/GameWaitingPageJoin');\n          } else {\n            navigate('/GamePage');\n          }\n        }\n      }\n      setAuth([clientId, response.game.id, serverlist, response.game.availability, colour]);\n    }\n    if (response.method === \"join\") {\n      const game = response.game;\n      const colour = [];\n      if (game != null) {\n        const serverlist = [];\n        game.clients.forEach(c => {\n          serverlist.push(c.clientName);\n          colour.push(c.colour);\n        });\n        if (location.pathname === '/GameWaitingPageCreator') {\n          navigate('/GameWaitingPageCreator');\n        } else {\n          if (game.state === \"waiting\") {\n            navigate('/GameWaitingPageJoin');\n          } else {\n            navigate('/GamePage');\n          }\n        }\n        setAuth([clientId, response.game.id, game.clients, response.game.availability, colour]);\n      } else {\n        alert(\"That game server code does not work\");\n      }\n    }\n    if (response.method === \"count\") {\n      const game = response.game;\n      const serverlist = [];\n      game.clients.forEach(c => {\n        serverlist.push(c.clientName);\n      });\n      setAuth([clientId, game.id, serverlist]);\n    }\n    if (response.method === \"start\") {\n      const game = response.game;\n      navigate('/GamePage');\n      console.log(game.clients);\n      setAuth([clientId, game.id, game.clients]);\n    }\n    if (response.method === \"delete\") {\n      const game = response.game;\n      const serverlist = [];\n      const colour = [];\n      let x = 0,\n        clientNum;\n      game.clients.forEach(c => {\n        serverlist.push(c.clientName);\n        colour.push(c.colour);\n        if (c.clientId === clientId) {\n          clientNum = x;\n        }\n        x++;\n      });\n      const duty = game.clients[clientNum].duty;\n      if (duty === \"Parent\") {\n        if (location.pathname === '/GameWaitingPageJoin') {\n          navigate('/GameWaitingPageCreator');\n        }\n      }\n      setAuth([clientId, response.game.id, serverlist, response.game.availability, colour]);\n    }\n    if (response.method === \"serverFull\") {\n      alert(\"That Server Is currently Full\");\n    }\n  };\n  const navigate = useNavigate();\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomePage, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FindaGame, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameWaitingPageCreator, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameWaitingPageJoin, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GamePage, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZKd9XECVDsN9OtrtbenHZh111cE=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useNavigate","useLocation","Route","Link","NavLink","HomePage","FindaGame","GameWaitingPageJoin","useAuth","GameWaitingPageCreator","GamePage","clientId","ws","WebSocket","App","setAuth","onmessage","message","response","JSON","parse","data","method","clientID","console","log","game","id","serverlist","colour","clients","forEach","c","push","clientName","availability","duty","navigate","location","pathname","state","alert","x","clientNum"],"sources":["D:/BIGBOI/Documents/Acronymgame/acronym-game-site/acronymgame/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useNavigate, useLocation, Route, Link, NavLink } from 'react-router-dom';\r\nimport HomePage from \"./pages/HomePage\";\r\nimport FindaGame from \"./pages/FindaGame\";\r\nimport GameWaitingPageJoin from \"./pages/GameWaitingPageJoin\";\r\nimport useAuth from './hooks/useAuth';\r\nimport GameWaitingPageCreator from './pages/GameWaitingPageCreator';\r\nimport GamePage from './pages/GamePage';\r\nlet clientId = null;\r\nconst ws = new WebSocket(\"ws://localhost:9090\")\r\n\r\n\r\nfunction App() {\r\n  const {setAuth} = useAuth();\r\n  ws.onmessage = message =>{\r\n    const response = JSON.parse(message.data);\r\n    if(response.method === \"connect\"){\r\n      clientId = response.clientID;\r\n      console.log(\"Client id set successfully \" + clientId)\r\n      setAuth([clientId]);\r\n    }\r\n\r\n    if(response.method === \"create\"){\r\n      console.log(\"game successfully created with id \" + response.game.id);\r\n      const game = response.game;\r\n      const serverlist = [];\r\n      const colour = [];\r\n      game.clients.forEach(c =>{\r\n        \r\n        serverlist.push(c.clientName);\r\n        colour.push(c.colour);\r\n      })\r\n      setAuth([clientId, response.game.id, serverlist, response.game.availability, colour])\r\n    }\r\n\r\n    if(response.method === \"RandomServer\"){\r\n      const game = response.game;\r\n      const duty = response.duty\r\n      const serverlist = [];\r\n      const colour = [];\r\n      if(duty === \"Parent\"){\r\n        game.clients.forEach(c =>{\r\n        \r\n          serverlist.push(c.clientName);\r\n          colour.push(c.colour);\r\n        })\r\n        \r\n        navigate('/GameWaitingPageCreator')\r\n      }else{\r\n        game.clients.forEach(c =>{\r\n          serverlist.push(c.clientName);\r\n          colour.push(c.colour);\r\n        })\r\n        if(location.pathname === '/GameWaitingPageCreator'){\r\n          navigate('/GameWaitingPageCreator')\r\n        }else{\r\n          if(game.state === \"waiting\"){\r\n            navigate('/GameWaitingPageJoin')\r\n          }else {\r\n            navigate('/GamePage')\r\n          }\r\n          \r\n        }\r\n      }\r\n      setAuth([clientId, response.game.id, serverlist, response.game.availability, colour])\r\n    }\r\n\r\n    if(response.method === \"join\"){\r\n      const game = response.game;\r\n      const colour = [];\r\n      if(game != null){\r\n        const serverlist = [];\r\n        game.clients.forEach(c =>{\r\n          serverlist.push(c.clientName);\r\n          colour.push(c.colour);\r\n        })\r\n      \r\n        if(location.pathname === '/GameWaitingPageCreator'){\r\n          navigate('/GameWaitingPageCreator')\r\n        }else{\r\n          if(game.state === \"waiting\"){\r\n            navigate('/GameWaitingPageJoin')\r\n          }else {\r\n            navigate('/GamePage')\r\n          }\r\n        }\r\n        setAuth([clientId, response.game.id, game.clients, response.game.availability, colour])\r\n      }else{\r\n        alert(\"That game server code does not work\");\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    if(response.method === \"count\"){\r\n      const game = response.game;\r\n      const serverlist = [];\r\n      game.clients.forEach(c =>{\r\n        serverlist.push(c.clientName);\r\n      })\r\n\r\n      setAuth([clientId, game.id, serverlist]);\r\n      \r\n    }\r\n\r\n    if(response.method === \"start\"){\r\n      const game = response.game;\r\n      navigate('/GamePage')\r\n      console.log(game.clients)\r\n      setAuth([clientId,game.id,game.clients])\r\n      \r\n    }\r\n\r\n\r\n    if(response.method === \"delete\"){\r\n      const game = response.game;\r\n      const serverlist = [];\r\n      const colour = [];\r\n      let x = 0, clientNum;\r\n      game.clients.forEach(c =>{\r\n        serverlist.push(c.clientName);\r\n        colour.push(c.colour);\r\n        if(c.clientId === clientId){\r\n          clientNum = x;\r\n        }\r\n        x++;\r\n      })\r\n      const duty = game.clients[clientNum].duty;\r\n      if(duty === \"Parent\"){\r\n        if( location.pathname === '/GameWaitingPageJoin'){\r\n          navigate('/GameWaitingPageCreator')\r\n        }\r\n        \r\n      }\r\n      setAuth([clientId, response.game.id, serverlist, response.game.availability, colour])\r\n\r\n    }\r\n\r\n    if(response.method === \"serverFull\"){\r\n      alert(\"That Server Is currently Full\")\r\n      \r\n    }\r\n  }\r\n  \r\n  \r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <HomePage location={location}/>\r\n      <FindaGame location={location}/>\r\n      <GameWaitingPageCreator location={location}/>\r\n      <GameWaitingPageJoin location={location}/>\r\n      <GamePage location={location}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}