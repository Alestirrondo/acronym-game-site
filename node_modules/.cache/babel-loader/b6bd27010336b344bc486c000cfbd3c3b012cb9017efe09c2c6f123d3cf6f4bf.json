{"ast":null,"code":"var _jsxFileName = \"D:\\\\BIGBOI\\\\Documents\\\\Acronymgame\\\\acronym-game-site\\\\acronymgame\\\\src\\\\pages\\\\GamePage.jsx\",\n  _s = $RefreshSig$();\nimport logo from './4me.png';\nimport Red from '../Images/RedPerson.png';\nimport Green from '../Images/GreenPerson.png';\nimport Blue from '../Images/BluePerson.png';\nimport Yellow from '../Images/YellowPerson.png';\nimport Orange from '../Images/OrangePerson.png';\nimport Purple from '../Images/PurplePerson.png';\nimport RedT from '../Images/RedPersonTurn.png';\nimport GreenT from '../Images/GreenPersonTurn.png';\nimport BlueT from '../Images/BluePersonTurn.png';\nimport YellowT from '../Images/YellowPersonTurn.png';\nimport OrangeT from '../Images/OrangePersonTurn.png';\nimport PurpleT from '../Images/PurplePersonTurn.png';\nimport { useNavigate } from 'react-router-dom';\nimport react, { useEffect, useState, useRef } from 'react';\nimport useAuth from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ws = new WebSocket(\"ws://localhost:9090\");\nconst GamePage = _ref => {\n  _s();\n  let {\n    location\n  } = _ref;\n  let ImageList = [];\n  let shuffledID = [];\n  let gameupdate = true;\n  const {\n    auth\n  } = useAuth();\n  const [gameStage, setGame] = useState(1);\n  const [userlist, setList] = useState();\n  const [Height, setHeight] = useState('100hv');\n  const navigate = useNavigate();\n  const [imageList, setImageList] = useState();\n  const [image, setImage] = useState();\n  const [noAnswer, setNo] = useState(false);\n  const [stage1, setStage1] = useState(30);\n  const timerId1 = useRef();\n  const [stage1run, setStage1run] = useState(false);\n  const timerId1check = useRef();\n  const [stage2, setStage2] = useState(60);\n  const timerId2 = useRef();\n  const [stage2run, setStage2run] = useState(false);\n  const timerId2check = useRef();\n  const [stage3, setStage3] = useState(30);\n  const timerId3 = useRef();\n  const [stage3run, setStage3run] = useState(false);\n  const timerId3check = useRef();\n  const [stage4, setStage4] = useState(5);\n  const [stage4run, setStage4run] = useState(false);\n  const [timeInBetween, setTimeInBetween] = useState(3);\n  const [inbetweenRoundClock, setINRClock] = useState(false);\n  const [acronym, setAcronym] = useState([\"\", \"\", \"\"]);\n  const [turn, setTurn] = useState(false);\n  const [mainAcronym, setMain] = useState(\"\");\n  const [answer, setAnswer] = useState({\n    response: ''\n  });\n  const [whoseTurn, setWho] = useState();\n  const [answerChoiceList, setChoiceList] = useState();\n  const [answerList, setAnswerList] = useState();\n  const [submitted, setSubmit] = useState(false);\n  const [roundWinner, setRoundWinner] = useState(\"\");\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAnswer({\n      ...answer,\n      [name]: value\n    });\n  };\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        console.log(auth[4] != gameStage);\n        if (auth[4] != gameStage) {\n          setGame(auth[4]);\n          UpdateGame(true);\n        } else {\n          UpdateGame(false);\n        }\n      }\n    }\n  }, [auth]);\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        //setGame(auth[3].stage)\n        const serverlist = [];\n        let turncheck = false;\n        let wordlist = [];\n        auth[2].forEach(c => {\n          serverlist.push(c.clientName + \"\\nScore: \" + c.score);\n          if (c.colour === 'Red') {\n            if (c.turn === true) {\n              ImageList.push(RedT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Red);\n            }\n          }\n          if (c.colour === 'Green') {\n            if (c.turn === true) {\n              ImageList.push(GreenT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Green);\n            }\n          }\n          if (c.colour === 'Blue') {\n            if (c.turn === true) {\n              ImageList.push(BlueT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Blue);\n            }\n          }\n          if (c.colour === 'Yellow') {\n            if (c.turn === true) {\n              ImageList.push(YellowT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Yellow);\n            }\n          }\n          if (c.colour === 'Orange') {\n            if (c.turn === true) {\n              ImageList.push(OrangeT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Orange);\n            }\n          }\n          if (c.colour === 'Purple') {\n            if (c.turn === true) {\n              ImageList.push(PurpleT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Purple);\n            }\n          }\n          if (c.turn === true && c.clientId === auth[0]) {\n            DeclareTurn();\n            turncheck = true;\n          }\n        });\n        setList(serverlist.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"namelist\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 40\n        }, this)));\n        setImage(ImageList.map(colour => /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"playerimg\",\n          src: colour\n        }, colour, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 43\n        }, this)));\n        console.log(gameupdate);\n        if (gameStage == 1 && gameupdate === true) {\n          wordlist = GenerateAcronym();\n          setStage1(30);\n          Stage1Clock(turncheck, wordlist);\n        }\n      }\n    }\n  }, [auth]);\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (gameStage == 2 && turn === false) {\n          setSubmit(false);\n          setMain(auth[3]);\n          setStage2(60);\n          Stage2Clock();\n        }\n        if (gameStage == 3) {\n          let answers = [];\n          auth[2].forEach(c => {\n            if (c.answer !== \"\") {\n              answers.push([c.answer, c.clientId]);\n            }\n          });\n          let shuffled = answers.map(value => ({\n            value,\n            sort: Math.random()\n          })).sort((a, b) => a.sort - b.sort).map(_ref2 => {\n            let {\n              value\n            } = _ref2;\n            return value;\n          });\n          let shuffledA = [];\n          for (let i = 0; i < shuffled.length; i++) {\n            shuffledA.push(shuffled[i][0]);\n            shuffledID.push(shuffled[i][1]);\n          }\n          if (shuffledA.length === 0) {\n            blankAnswers();\n          } else {\n            setNo(false);\n            setID(shuffledID);\n            setChoiceList(shuffledA.map(name => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"acronymButton2\",\n              onClick: () => SelectAnswer(name, shuffledA.findIndex(x => x === name)),\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 45\n            }, this)));\n            setAnswerList(shuffledA.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"namelist\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 45\n            }, this)));\n            if (turn) {\n              Stage3Clock(shuffled);\n            }\n          }\n        }\n        if (gameStage == 4) {\n          setMain(auth[3]);\n          setRoundWinner(auth[5]);\n          setTimeInBetween(timeInBetween - 1);\n          setINRClock(true);\n          setStage1run(false);\n          setStage2run(false);\n          setNo(false);\n          if (turn === true) {\n            SetINRC();\n          }\n        }\n        if (gameStage == 5) {\n          if (turn === true) {\n            reset();\n          }\n        }\n      }\n    }\n  }, [gameStage]);\n  function UpdateGame(update) {\n    if (update) {\n      gameupdate = true;\n    } else {\n      gameupdate = false;\n    }\n  }\n  function Stage1Clock(turncheck, wordlist) {\n    if ((turncheck === true || turn === true) && gameStage === 1) {\n      checkClock1(wordlist);\n      clearInterval(timerId1check.current);\n      timerId1.current = setInterval(() => {\n        setStage1(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timerId1.current);\n    } else {\n      clearInterval(timerId1.current);\n      setStage1(30);\n    }\n  }\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (stage1 <= 0) {\n          clearInterval(timerId1.current);\n          setStage1(30);\n          clearInterval(timerId1.current);\n        }\n      }\n    }\n  }, [stage1]);\n  function checkClock1(wordlist) {\n    if (!stage1run) {\n      timerId1check.current = setInterval(() => {\n        SelectAcronym(wordlist[Math.floor(Math.random() * 3)]);\n        setStage1run(true);\n      }, 30000);\n      return () => clearInterval(timerId1check.current);\n    }\n  }\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (stage1run) {\n          clearInterval(timerId1check.current);\n        }\n      }\n    }\n  }, [stage1run]);\n  function Stage2Clock() {\n    if (!turn) {\n      clearInterval(timerId2.current);\n      checkClock2();\n      timerId2.current = setInterval(() => {\n        setStage2(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timerId2.current);\n    } else {\n      setStage2(60);\n    }\n  }\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (stage2 <= 0) {\n          clearInterval(timerId2.current);\n          setStage2(60);\n          clearInterval(timerId2.current);\n        }\n      }\n    }\n  }, [stage2]);\n  function checkClock2() {\n    if (!stage2run) {\n      timerId2check.current = setInterval(() => {\n        SubmitAcronymTimeout();\n        setStage2run(true);\n      }, 60000);\n      return () => clearInterval(timerId2check.current);\n    }\n  }\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (stage2run) {\n          clearInterval(timerId2check.current);\n        }\n      }\n    }\n  }, [stage2run]);\n  function Stage3Clock(shuffled) {\n    if (turn) {\n      clearInterval(timerId3.current);\n      checkClock3(shuffled);\n      timerId3.current = setInterval(() => {\n        setStage3(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timerId3.current);\n    } else {\n      setStage3(30);\n    }\n  }\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (stage3 <= 0) {\n          clearInterval(timerId3.current);\n          setStage3(30);\n          clearInterval(timerId3.current);\n        }\n      }\n    }\n  }, [stage3]);\n  function checkClock3(shuffled) {\n    if (!stage3run) {\n      timerId3check.current = setInterval(() => {\n        let x = Math.floor(Math.random() * shuffled.length);\n        setStage3run(true);\n      }, 30000);\n      return () => clearInterval(timerId3check.current);\n    }\n  }\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (stage3run) {\n          clearInterval(timerId3check.current);\n        }\n      }\n    }\n  }, [stage3run]);\n  function blankAnswers() {\n    setNo(true);\n    const clock = setInterval(() => {\n      if (turn) {\n        nextRound();\n      }\n      clearInterval(clock);\n    }, 5000);\n    return () => clearInterval(clock);\n  }\n  function setID(list) {\n    shuffledID = list;\n  }\n  function SetINRC() {\n    setTimeout(() => {\n      setINRClock(false);\n      setTimeInBetween(3);\n      nextRound();\n      setTurn(false);\n      setSubmit(false);\n    }, 5000);\n  }\n  function DeclareTurn() {\n    setTurn(true);\n  }\n  function GenerateAcronym() {\n    let letter;\n    let word3 = \"\",\n      word4 = \"\",\n      word5 = \"\";\n    for (let i = 3; i < 6; i++) {\n      for (let j = 0; j < i; j++) {\n        letter = {\n          \"0\": \"A\",\n          \"1\": \"B\",\n          \"2\": \"C\",\n          \"3\": \"D\",\n          \"4\": \"E\",\n          \"5\": \"F\",\n          \"6\": \"G\",\n          \"7\": \"H\",\n          \"8\": \"I\",\n          \"9\": \"J\",\n          \"10\": \"K\",\n          \"11\": \"L\",\n          \"12\": \"M\",\n          \"13\": \"N\",\n          \"14\": \"O\",\n          \"15\": \"P\",\n          \"16\": \"Q\",\n          \"17\": \"R\",\n          \"18\": \"S\",\n          \"19\": \"T\",\n          \"20\": \"U\",\n          \"21\": \"V\",\n          \"22\": \"W\",\n          \"23\": \"X\",\n          \"24\": \"Y\",\n          \"25\": \"Z\"\n        }[Math.floor(Math.random() * 25)];\n        if (i == 3) {\n          word3 += letter;\n        }\n        if (i == 4) {\n          word4 += letter;\n        }\n        if (i == 5) {\n          word5 += letter;\n        }\n      }\n    }\n    setAcronym([word3, word4, word5]);\n    return [word3, word4, word5];\n  }\n  function SelectAcronym(Word) {\n    setStage1(30);\n    setStage1run(true);\n    const payLoad = {\n      \"method\": \"select\",\n      \"gameId\": auth[1],\n      \"acronym\": Word\n    };\n    ws.send(JSON.stringify(payLoad));\n  }\n  function nextRound() {\n    const payLoad = {\n      \"method\": \"round\",\n      \"gameId\": auth[1]\n    };\n    ws.send(JSON.stringify(payLoad));\n    ImageList = [];\n    setTurn(false);\n    setNo(false);\n  }\n  function reset() {\n    setTimeout(() => {\n      const payLoad = {\n        \"method\": \"reset\",\n        \"gameId\": auth[1]\n      };\n      ws.send(JSON.stringify(payLoad));\n      setTurn(false);\n      setSubmit(false);\n      ImageList = [];\n    }, 5000);\n  }\n  function SelectAnswer(Word, index) {\n    const id = shuffledID[index];\n    const payLoad = {\n      \"method\": \"point\",\n      \"gameId\": auth[1],\n      \"user\": id,\n      \"acronym\": Word\n    };\n    ws.send(JSON.stringify(payLoad));\n  }\n  function SubmitAcronym(Word) {\n    const answercheck = Word.trim().split(\" \");\n    let check = 0;\n    setStage2(60);\n    setStage2run(true);\n    setAnswer({\n      response: ''\n    });\n    if (answercheck.length == mainAcronym.length) {\n      for (let i = 0; i < mainAcronym.length; i++) {\n        if (answercheck[i][0].toLowerCase() === mainAcronym[i].toLowerCase()) {\n          check++;\n        }\n      }\n      if (check == mainAcronym.length) {\n        const payLoad = {\n          \"method\": \"submit\",\n          \"gameId\": auth[1],\n          \"acronym\": Word,\n          \"clientId\": auth[0]\n        };\n        ws.send(JSON.stringify(payLoad));\n        setSubmit(true);\n      } else {\n        alert(\"this is not an acronym of \" + mainAcronym);\n      }\n    } else {\n      alert(\"this is not an acronym of \" + mainAcronym);\n    }\n  }\n  function SubmitAcronymTimeout() {\n    setStage2(60);\n    setAnswer({\n      response: ''\n    });\n    const payLoad = {\n      \"method\": \"submit\",\n      \"gameId\": auth[1],\n      \"acronym\": \"\",\n      \"clientId\": auth[0]\n    };\n    ws.send(JSON.stringify(payLoad));\n    setSubmit(true);\n  }\n  return location.pathname === '/GamePage' ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      height: Height\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"App-header\",\n      children: \"Acronym for me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usercode\",\n      children: [\"Game Code: \", auth[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 7\n    }, this), gameStage == 1 && turn === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" Pick an accronym \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"acronymButton\",\n          onClick: () => SelectAcronym(acronym[0]),\n          children: [\" \", acronym[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"acronymButton\",\n          onClick: () => SelectAcronym(acronym[1]),\n          children: [\" \", acronym[1], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"acronymButton\",\n          onClick: () => SelectAcronym(acronym[2]),\n          children: [\" \", acronym[2], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [\" Time Left to choose \", stage1, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 9\n    }, this), gameStage == 1 && turn === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [\" Waiting for \", whoseTurn, \" to Pick an Acronym \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 9\n    }, this), gameStage == 2 && turn !== true && submitted === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [\" Fill out an acronym for \", mainAcronym, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"gameTextbox\",\n        type: \"text\",\n        id: \"textbox\",\n        name: \"response\",\n        value: answer.response,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"submitButton\",\n        onClick: () => SubmitAcronym(answer.response),\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [\" Time left to make an acronym \", stage2, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 9\n    }, this), gameStage == 2 && turn === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" Waiting for other players to make their acronym \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 9\n    }, this), gameStage == 3 && turn === true && noAnswer === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" Pick Your Favourite \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: answerChoiceList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [\" Time Left to choose \", stage3, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 9\n    }, this), gameStage == 3 && turn === false && noAnswer === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" These are your answers \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: answerList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 9\n    }, this), gameStage == 3 && noAnswer === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" No one answered so no points awarded \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 7\n    }, this), gameStage == 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [roundWinner, \" won the round with the acronym \", mainAcronym]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 9\n    }, this), gameStage == 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [roundWinner, \" Wins  the Game\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playercontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: userlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 548,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(GamePage, \"EWX/eiplAHrUvu/EL3xo9RMj5RY=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["logo","Red","Green","Blue","Yellow","Orange","Purple","RedT","GreenT","BlueT","YellowT","OrangeT","PurpleT","useNavigate","react","useEffect","useState","useRef","useAuth","ws","WebSocket","GamePage","location","ImageList","shuffledID","gameupdate","auth","gameStage","setGame","userlist","setList","Height","setHeight","navigate","imageList","setImageList","image","setImage","noAnswer","setNo","stage1","setStage1","timerId1","stage1run","setStage1run","timerId1check","stage2","setStage2","timerId2","stage2run","setStage2run","timerId2check","stage3","setStage3","timerId3","stage3run","setStage3run","timerId3check","stage4","setStage4","stage4run","setStage4run","timeInBetween","setTimeInBetween","inbetweenRoundClock","setINRClock","acronym","setAcronym","turn","setTurn","mainAcronym","setMain","answer","setAnswer","response","whoseTurn","setWho","answerChoiceList","setChoiceList","answerList","setAnswerList","submitted","setSubmit","roundWinner","setRoundWinner","handleChange","e","name","value","target","pathname","console","log","UpdateGame","serverlist","turncheck","wordlist","forEach","c","push","clientName","score","colour","clientId","DeclareTurn","map","GenerateAcronym","Stage1Clock","Stage2Clock","answers","shuffled","sort","Math","random","a","b","shuffledA","i","length","blankAnswers","setID","SelectAnswer","findIndex","x","Stage3Clock","SetINRC","reset","update","checkClock1","clearInterval","current","setInterval","prev","SelectAcronym","floor","checkClock2","SubmitAcronymTimeout","checkClock3","clock","nextRound","list","setTimeout","letter","word3","word4","word5","j","Word","payLoad","send","JSON","stringify","index","id","SubmitAcronym","answercheck","trim","split","check","toLowerCase","alert","height"],"sources":["D:/BIGBOI/Documents/Acronymgame/acronym-game-site/acronymgame/src/pages/GamePage.jsx"],"sourcesContent":["import logo from './4me.png';\r\nimport Red from '../Images/RedPerson.png';\r\nimport Green from '../Images/GreenPerson.png';\r\nimport Blue from '../Images/BluePerson.png';\r\nimport Yellow from '../Images/YellowPerson.png';\r\nimport Orange from '../Images/OrangePerson.png';\r\nimport Purple from '../Images/PurplePerson.png';\r\nimport RedT from '../Images/RedPersonTurn.png';\r\nimport GreenT from '../Images/GreenPersonTurn.png';\r\nimport BlueT from '../Images/BluePersonTurn.png';\r\nimport YellowT from '../Images/YellowPersonTurn.png';\r\nimport OrangeT from '../Images/OrangePersonTurn.png';\r\nimport PurpleT from '../Images/PurplePersonTurn.png';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport react, {useEffect, useState, useRef} from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nconst ws = new WebSocket(\"ws://localhost:9090\")\r\n\r\nconst GamePage = ({location}) => {\r\n  let ImageList = []\r\n  let shuffledID = []\r\n  let gameupdate = true;\r\n  const { auth } = useAuth();\r\n  const [gameStage, setGame] = useState(1);\r\n  const [userlist, setList] = useState();\r\n  const [Height, setHeight] = useState('100hv');\r\n  const navigate = useNavigate();\r\n  const [imageList, setImageList] = useState();\r\n  const [image, setImage] = useState();\r\n  const [noAnswer, setNo] = useState(false);\r\n\r\n  const [stage1, setStage1] = useState(30);\r\n  const timerId1 = useRef()\r\n  const [stage1run, setStage1run] = useState(false)\r\n  const timerId1check = useRef()\r\n \r\n  const [stage2, setStage2] = useState(60);\r\n  const timerId2 = useRef()\r\n  const [stage2run, setStage2run] = useState(false)\r\n  const timerId2check = useRef()\r\n\r\n  const [stage3, setStage3] = useState(30);\r\n  const timerId3 = useRef()\r\n  const [stage3run, setStage3run] = useState(false)\r\n  const timerId3check = useRef()\r\n\r\n  const [stage4, setStage4] = useState(5);\r\n  const [stage4run, setStage4run] = useState(false)\r\n  const [timeInBetween, setTimeInBetween] = useState(3);\r\n  const [inbetweenRoundClock, setINRClock] = useState(false)\r\n  const [acronym, setAcronym] = useState([\"\",\"\",\"\"]);\r\n  const [turn, setTurn] = useState(false);\r\n  const [mainAcronym, setMain] = useState(\"\")\r\n  const [answer, setAnswer] = useState({\r\n    response: '',\r\n  });\r\n  const [whoseTurn, setWho] = useState()\r\n  const [answerChoiceList, setChoiceList] = useState();\r\n  const [answerList, setAnswerList] = useState();\r\n  const [submitted, setSubmit] = useState(false)\r\n  const [roundWinner, setRoundWinner] = useState(\"\")\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAnswer({\r\n      ...answer,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        console.log(auth[4] != gameStage)\r\n        \r\n        if(auth[4] != gameStage){\r\n          \r\n          setGame(auth[4])\r\n          UpdateGame(true)\r\n        }else{\r\n          UpdateGame(false)\r\n        }\r\n        \r\n      }\r\n    }\r\n  },[auth])\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        //setGame(auth[3].stage)\r\n        const serverlist = [];\r\n        let turncheck = false;\r\n        let wordlist = [];\r\n        auth[2].forEach(c =>{\r\n          serverlist.push(c.clientName + \"\\nScore: \" + c.score);\r\n          if(c.colour === 'Red'){\r\n            if(c.turn === true){\r\n              ImageList.push(RedT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Red)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Green'){\r\n            if(c.turn === true){\r\n              ImageList.push(GreenT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Green)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Blue'){\r\n            if(c.turn === true){\r\n              ImageList.push(BlueT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Blue)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Yellow'){\r\n            if(c.turn === true){\r\n              ImageList.push(YellowT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Yellow)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Orange'){\r\n            if(c.turn === true){\r\n              ImageList.push(OrangeT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Orange)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Purple'){\r\n            if(c.turn === true){\r\n              ImageList.push(PurpleT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Purple)\r\n            }\r\n            \r\n          }\r\n          if(c.turn === true && c.clientId === auth[0]){\r\n            \r\n            DeclareTurn()\r\n            turncheck = true;\r\n          }\r\n        })\r\n        setList(serverlist.map(name => <li className='namelist'>{name}</li>))\r\n        setImage(ImageList.map(colour => (<img className='playerimg' key={colour} src= {colour} />)))\r\n        console.log(gameupdate)\r\n        if(gameStage == 1 && gameupdate === true){\r\n          \r\n          wordlist = GenerateAcronym()\r\n          setStage1(30)\r\n          Stage1Clock(turncheck, wordlist)\r\n        }\r\n        \r\n      } \r\n    }\r\n},[auth])\r\n\r\nuseEffect(() => {\r\n  if(auth[1] == null){\r\n    navigate('/');\r\n  }else{\r\n    if(location.pathname === '/GamePage'){\r\n      if(gameStage == 2 && turn === false){\r\n        setSubmit(false)\r\n        setMain(auth[3])\r\n        setStage2(60)\r\n        Stage2Clock()\r\n      }\r\n      if(gameStage == 3){\r\n        let answers = []\r\n        auth[2].forEach(c => {\r\n          if(c.answer !== \"\"){\r\n            answers.push([c.answer, c.clientId]);\r\n          }\r\n        })\r\n        let shuffled = answers.map(value => ({ value, sort: Math.random() })).sort((a, b) => a.sort - b.sort).map(({ value }) => value)\r\n        let shuffledA = [];\r\n        for(let i = 0; i < shuffled.length; i++){\r\n          shuffledA.push(shuffled[i][0])\r\n          shuffledID.push(shuffled[i][1])\r\n        }\r\n        if(shuffledA.length === 0){\r\n          blankAnswers()\r\n        }else{\r\n        setNo(false)\r\n        setID(shuffledID)\r\n        setChoiceList(shuffledA.map(name => <button className=\"acronymButton2\" onClick={() =>SelectAnswer(name, shuffledA.findIndex(x => x === name))} >{name}</button>))\r\n        setAnswerList(shuffledA.map(name => <li className=\"namelist\">{name}</li>))\r\n        if(turn){\r\n          Stage3Clock(shuffled)\r\n        }\r\n        }\r\n        \r\n        \r\n        \r\n      }\r\n      if(gameStage == 4){\r\n        setMain(auth[3])\r\n        setRoundWinner(auth[5])\r\n        setTimeInBetween(timeInBetween - 1);\r\n        setINRClock(true)\r\n        setStage1run(false)\r\n        setStage2run(false)\r\n        setNo(false)\r\n        if(turn === true){\r\n          SetINRC()\r\n        }\r\n        \r\n      }\r\n      if(gameStage == 5){\r\n        if(turn === true){\r\n          reset()\r\n        }\r\n        \r\n      }\r\n    }\r\n  }\r\n},[gameStage])\r\n\r\n\r\n\r\n\r\n\r\n  function UpdateGame(update){\r\n    if(update){\r\n      gameupdate = true\r\n    }else{\r\n      gameupdate = false\r\n    }\r\n\r\n  }\r\n  function Stage1Clock(turncheck, wordlist){\r\n    if((turncheck === true || turn === true) && gameStage === 1){\r\n      checkClock1(wordlist)\r\n      clearInterval(timerId1check.current)\r\n      timerId1.current = setInterval(() => {\r\n          setStage1(prev => prev - 1)\r\n      },1000)\r\n      return() => clearInterval(timerId1.current) \r\n    }else{\r\n      clearInterval(timerId1.current) \r\n      setStage1(30)\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage1 <=0){\r\n          clearInterval(timerId1.current)\r\n          setStage1(30)\r\n          clearInterval(timerId1.current)\r\n        }\r\n      }\r\n    }\r\n  },[stage1])\r\n\r\n  function checkClock1(wordlist){\r\n    if(!stage1run){\r\n      timerId1check.current = setInterval(() => {\r\n        SelectAcronym(wordlist[Math.floor(Math.random()*3)])\r\n        setStage1run(true)\r\n        \r\n      },30000)\r\n      return() => clearInterval(timerId1check.current)\r\n    }\r\n    \r\n\r\n  }\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage1run){\r\n          clearInterval(timerId1check.current)\r\n        }\r\n      }\r\n    }\r\n  },[stage1run])\r\n\r\n  \r\n  \r\n  function Stage2Clock(){\r\n    if(!turn){\r\n      clearInterval(timerId2.current)\r\n      checkClock2()\r\n      timerId2.current = setInterval(() => {\r\n        setStage2(prev => prev - 1)\r\n      },1000)\r\n      return() => clearInterval(timerId2.current)\r\n    }else{\r\n      setStage2(60)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage2 <=0){\r\n          clearInterval(timerId2.current)\r\n          setStage2(60)\r\n          clearInterval(timerId2.current)\r\n        }\r\n      }\r\n    }\r\n  },[stage2])\r\n\r\n  function checkClock2(){\r\n    if(!stage2run){\r\n      timerId2check.current= setInterval(() => {\r\n        SubmitAcronymTimeout()\r\n        setStage2run(true)\r\n      },60000)\r\n      return() => clearInterval(timerId2check.current)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage2run){\r\n          clearInterval(timerId2check.current)\r\n        }\r\n      }\r\n    }\r\n  },[stage2run])\r\n\r\n\r\n  function Stage3Clock(shuffled){\r\n    \r\n    if(turn){\r\n      clearInterval(timerId3.current)\r\n      checkClock3(shuffled)\r\n      timerId3.current = setInterval(() => {\r\n        setStage3(prev => prev - 1)\r\n      },1000)\r\n      return() => clearInterval(timerId3.current)\r\n    }else{\r\n      setStage3(30)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage3 <=0){\r\n          clearInterval(timerId3.current)\r\n          setStage3(30)\r\n          clearInterval(timerId3.current)\r\n        }\r\n      }\r\n    }\r\n  },[stage3])\r\n\r\n  function checkClock3(shuffled){\r\n    if(!stage3run){\r\n      timerId3check.current= setInterval(() => {\r\n        let x =Math.floor(Math.random()*shuffled.length);\r\n        setStage3run(true)\r\n      },30000)\r\n      return() => clearInterval(timerId3check.current)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage3run){\r\n          clearInterval(timerId3check.current)\r\n        }\r\n      }\r\n    }\r\n  },[stage3run])\r\n\r\n  function blankAnswers(){\r\n    setNo(true)\r\n    const clock= setInterval(() => {\r\n      if(turn){\r\n        nextRound()\r\n      }\r\n      clearInterval(clock)\r\n    },5000)\r\n    return() => clearInterval(clock)\r\n  }\r\n\r\n  function setID(list){\r\n    shuffledID = list;\r\n  }\r\n\r\n  function SetINRC(){\r\n    setTimeout(() => {\r\n      setINRClock(false)\r\n      setTimeInBetween(3)\r\n      nextRound()\r\n      setTurn(false)\r\n      setSubmit(false)\r\n    }, 5000)\r\n    \r\n    \r\n  }\r\n\r\n  function DeclareTurn(){\r\n    setTurn(true)\r\n  }\r\n\r\n  function GenerateAcronym(){\r\n    let letter;\r\n    let word3 = \"\", word4 = \"\", word5 = \"\";\r\n    for(let i = 3; i<6; i++){\r\n      for(let j = 0; j<i; j++){\r\n        letter = {\"0\": \"A\", \"1\": \"B\", \"2\": \"C\", \"3\": \"D\",  \"4\": \"E\", \"5\": \"F\", \"6\": \"G\", \"7\": \"H\", \"8\": \"I\",  \"9\": \"J\", \"10\": \"K\", \"11\": \"L\", \"12\": \"M\", \"13\": \"N\",  \"14\": \"O\", \"15\": \"P\", \"16\": \"Q\", \"17\": \"R\", \"18\": \"S\",  \"19\": \"T\", \"20\": \"U\", \"21\": \"V\", \"22\": \"W\", \"23\": \"X\", \"24\" : \"Y\", \"25\" : \"Z\"}[Math.floor(Math.random()*25)];\r\n        if(i == 3){\r\n          word3 += letter;\r\n        }\r\n        if(i == 4){\r\n          word4 += letter;\r\n        }\r\n        if(i == 5){\r\n          word5 += letter;\r\n          }\r\n        }\r\n      }\r\n    setAcronym([word3, word4, word5])\r\n    return([word3, word4, word5])\r\n  }\r\n  \r\n  function SelectAcronym(Word){\r\n    setStage1(30)\r\n    setStage1run(true)\r\n    const payLoad = {\r\n      \"method\": \"select\",\r\n      \"gameId\" : auth[1],\r\n      \"acronym\" : Word\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n  }\r\n\r\n  function nextRound(){\r\n    const payLoad = {\r\n      \"method\": \"round\",\r\n      \"gameId\" : auth[1],\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n    ImageList = [];\r\n    setTurn(false)\r\n    setNo(false)\r\n  }\r\n\r\n  function reset(){\r\n    setTimeout(() => {\r\n      const payLoad = {\r\n        \"method\": \"reset\",\r\n        \"gameId\" : auth[1],\r\n      }\r\n      ws.send(JSON.stringify(payLoad))\r\n      setTurn(false)\r\n      setSubmit(false)\r\n      ImageList = [];\r\n    }, 5000)\r\n  }\r\n\r\n  function SelectAnswer(Word, index){\r\n    const id = shuffledID[index]\r\n    const payLoad = {\r\n      \"method\": \"point\",\r\n      \"gameId\" : auth[1],\r\n      \"user\" : id,\r\n      \"acronym\" : Word\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n  }\r\n\r\n  \r\n\r\n  function SubmitAcronym(Word){\r\n    const answercheck = Word.trim().split(\" \")\r\n    let check = 0;\r\n    setStage2(60)\r\n    setStage2run(true)\r\n    setAnswer({response: '',})\r\n    if(answercheck.length == mainAcronym.length){\r\n      for(let i = 0; i<mainAcronym.length; i++){\r\n        if(answercheck[i][0].toLowerCase() === mainAcronym[i].toLowerCase()){\r\n          check ++;\r\n        }\r\n      }\r\n      if(check == mainAcronym.length){\r\n        const payLoad = {\r\n          \"method\": \"submit\",\r\n          \"gameId\" : auth[1],\r\n          \"acronym\" : Word,\r\n          \"clientId\" : auth[0]\r\n        }\r\n        ws.send(JSON.stringify(payLoad))\r\n        setSubmit(true);\r\n      }else{\r\n        alert(\"this is not an acronym of \" + mainAcronym)\r\n      }\r\n      \r\n    }else{\r\n      alert(\"this is not an acronym of \" + mainAcronym)\r\n    }\r\n    \r\n  }\r\n\r\n  function SubmitAcronymTimeout(){\r\n    setStage2(60)\r\n    setAnswer({response: '',})\r\n    const payLoad = {\r\n      \"method\": \"submit\",\r\n      \"gameId\" : auth[1],\r\n      \"acronym\" : \"\",\r\n      \"clientId\" : auth[0]\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n    setSubmit(true);\r\n  }\r\n\r\n  return (location.pathname === '/GamePage')\r\n  ? (\r\n    <div className=\"App\" style={{ height: Height}}>\r\n      <h1 className=\"App-header\">\r\n        Acronym for me\r\n      </h1>\r\n      <div className= \"usercode\">Game Code: {auth[1]}</div>\r\n      {(gameStage == 1 && turn === true) &&\r\n        <div>\r\n          <div className = \"instructions\"> Pick an accronym </div>\r\n        <ul>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[0])}> {acronym[0]}</button>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[1])}> {acronym[1]} </button>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[2])}> {acronym[2]} </button>\r\n        </ul>\r\n          <div className = \"instructions\"> Time Left to choose {stage1} </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 1 && turn === false) &&\r\n        <div>\r\n          <div className = \"instructions\"> Waiting for {whoseTurn} to Pick an Acronym </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 2 && turn !== true && submitted === false) &&\r\n        <div>\r\n          <div className = \"instructions\"> Fill out an acronym for {mainAcronym} </div>\r\n          <input\r\n            className = \"gameTextbox\"\r\n            type=\"text\"\r\n            id = \"textbox\"\r\n            name=\"response\"\r\n            value={answer.response}\r\n            onChange={handleChange}\r\n            />\r\n            <div> </div>\r\n            <button type=\"button\" className=\"submitButton\" onClick={() =>SubmitAcronym(answer.response)}> Submit </button>\r\n            <div className = \"instructions\"> Time left to make an acronym {stage2} </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 2 && turn === true) &&\r\n        <div>\r\n          <div className = \"instructions\"> Waiting for other players to make their acronym </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 3 && turn === true && noAnswer === false) &&\r\n        <div>\r\n          <div className = \"instructions\"> Pick Your Favourite </div>\r\n        <ul className=\"list\">\r\n          {answerChoiceList}\r\n        </ul>\r\n        <div className = \"instructions\"> Time Left to choose {stage3} </div>\r\n        </div>\r\n      }\r\n\r\n      {(gameStage == 3 && turn === false && noAnswer === false) &&\r\n        <div>\r\n          <div className = \"instructions\"> These are your answers </div>\r\n        <ul>\r\n          {answerList}\r\n        </ul>\r\n        </div>\r\n      }\r\n      {(gameStage == 3 && noAnswer === true) &&\r\n      <div>\r\n      <div className = \"instructions\"> No one answered so no points awarded </div>\r\n      </div>      \r\n      }\r\n      {gameStage == 4 &&\r\n        <div>\r\n          <div className = \"instructions\">{roundWinner} won the round with the acronym {mainAcronym}</div>\r\n        </div>\r\n      }\r\n      {gameStage == 5 &&\r\n        <div>\r\n          <div className = \"instructions\">{roundWinner} Wins  the Game</div>\r\n        </div>\r\n      }\r\n      <div className= 'playercontainer'>\r\n      <ul className=\"list\">\r\n        {userlist}\r\n      </ul>\r\n      <ul>\r\n        {image}\r\n      </ul>\r\n      </div>\r\n      \r\n\r\n    </div>\r\n  ): null;\r\n}\r\n\r\nexport default GamePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}