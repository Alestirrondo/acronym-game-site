{"ast":null,"code":"var _jsxFileName = \"D:\\\\BIGBOI\\\\Documents\\\\Acronymgame\\\\acronym-game-site\\\\acronymgame\\\\src\\\\pages\\\\GamePage.jsx\",\n  _s = $RefreshSig$();\nimport logo from './4me.png';\nimport Red from '../Images/RedPerson.png';\nimport Green from '../Images/GreenPerson.png';\nimport Blue from '../Images/BluePerson.png';\nimport Yellow from '../Images/YellowPerson.png';\nimport Orange from '../Images/OrangePerson.png';\nimport Purple from '../Images/PurplePerson.png';\nimport RedT from '../Images/RedPersonTurn.png';\nimport GreenT from '../Images/GreenPersonTurn.png';\nimport BlueT from '../Images/BluePersonTurn.png';\nimport YellowT from '../Images/YellowPersonTurn.png';\nimport OrangeT from '../Images/OrangePersonTurn.png';\nimport PurpleT from '../Images/PurplePersonTurn.png';\nimport { useNavigate } from 'react-router-dom';\nimport react, { useEffect, useState, useRef } from 'react';\nimport useAuth from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ws = new WebSocket(\"ws://localhost:9090\");\nconst GamePage = _ref => {\n  _s();\n  let {\n    location\n  } = _ref;\n  let ImageList = [];\n  let shuffledID = [];\n  let wordlist = [];\n  let shuffled = [];\n  let stage3run = false;\n  const {\n    auth\n  } = useAuth();\n  const [gameStage, setGame] = useState(1);\n  const [userlist, setList] = useState();\n  const [Height, setHeight] = useState('100hv');\n  const navigate = useNavigate();\n  const [imageList, setImageList] = useState();\n  const [image, setImage] = useState();\n  const [noAnswer, setNo] = useState(false);\n  const [stage1, setStage1] = useState(30);\n  const timerId1 = useRef();\n  const timerId1check = useRef();\n  const [stage2, setStage2] = useState(60);\n  const timerId2 = useRef();\n  const timerId2check = useRef();\n  const [stage3, setStage3] = useState(30);\n  const timerId3 = useRef();\n  const timerId3check = useRef();\n  const [stage4, setStage4] = useState(5);\n  const [stage4run, setStage4run] = useState(false);\n  const [timeInBetween, setTimeInBetween] = useState(3);\n  const [inbetweenRoundClock, setINRClock] = useState(false);\n  const [acronym, setAcronym] = useState([\"\", \"\", \"\"]);\n  const [turn, setTurn] = useState(false);\n  const [mainAcronym, setMain] = useState(\"\");\n  const [answer, setAnswer] = useState({\n    response: ''\n  });\n  const [whoseTurn, setWho] = useState();\n  const [answerChoiceList, setChoiceList] = useState();\n  const [answerList, setAnswerList] = useState();\n  const [submitted, setSubmit] = useState(false);\n  const [roundWinner, setRoundWinner] = useState(\"\");\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAnswer({\n      ...answer,\n      [name]: value\n    });\n  };\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        //setGame(auth[3].stage)\n        const serverlist = [];\n        let turncheck = false;\n        auth[2].forEach(c => {\n          serverlist.push(c.clientName + \"\\nScore: \" + c.score);\n          if (c.colour === 'Red') {\n            if (c.turn === true) {\n              ImageList.push(RedT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Red);\n            }\n          }\n          if (c.colour === 'Green') {\n            if (c.turn === true) {\n              ImageList.push(GreenT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Green);\n            }\n          }\n          if (c.colour === 'Blue') {\n            if (c.turn === true) {\n              ImageList.push(BlueT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Blue);\n            }\n          }\n          if (c.colour === 'Yellow') {\n            if (c.turn === true) {\n              ImageList.push(YellowT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Yellow);\n            }\n          }\n          if (c.colour === 'Orange') {\n            if (c.turn === true) {\n              ImageList.push(OrangeT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Orange);\n            }\n          }\n          if (c.colour === 'Purple') {\n            if (c.turn === true) {\n              ImageList.push(PurpleT);\n              setWho(c.clientName);\n            } else {\n              ImageList.push(Purple);\n            }\n          }\n          if (c.turn === true && c.clientId === auth[0]) {\n            DeclareTurn();\n            turncheck = true;\n          }\n        });\n        setList(serverlist.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"namelist\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 40\n        }, this)));\n        setImage(ImageList.map(colour => /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"playerimg\",\n          src: colour\n        }, colour, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 43\n        }, this)));\n        if (auth[6] === true && turncheck === true) {\n          nextRound();\n        }\n        if (gameStage == 1 && auth[6] !== \"join\" && auth[6] !== \"delete\") {\n          wordlist = GenerateAcronym();\n          Stage1Clock(turncheck, wordlist);\n        }\n        if (auth[4] != gameStage) {\n          UpdateGame(true);\n        } else {\n          UpdateGame(false);\n        }\n      }\n    }\n  }, [auth]);\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (gameStage == 2 && turn === false) {\n          setSubmit(false);\n          setMain(auth[3]);\n          setStage2(60);\n          Stage2Clock();\n        }\n        if (gameStage == 3) {\n          let answers = [];\n          auth[2].forEach(c => {\n            if (c.answer !== \"\") {\n              answers.push([c.answer, c.clientId]);\n            }\n          });\n          shuffled = answers.map(value => ({\n            value,\n            sort: Math.random()\n          })).sort((a, b) => a.sort - b.sort).map(_ref2 => {\n            let {\n              value\n            } = _ref2;\n            return value;\n          });\n          let shuffledA = [];\n          for (let i = 0; i < shuffled.length; i++) {\n            shuffledA.push(shuffled[i][0]);\n            shuffledID.push(shuffled[i][1]);\n          }\n          if (shuffledA.length === 0) {\n            blankAnswers();\n          } else {\n            setNo(false);\n            setID(shuffledID);\n            setChoiceList(shuffledA.map(name => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"acronymButton2\",\n              onClick: () => SelectAnswer(name, shuffledA.findIndex(x => x === name)),\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 45\n            }, this)));\n            setAnswerList(shuffledA.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"namelist\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 45\n            }, this)));\n            if (turn) {\n              Stage3Clock(shuffled);\n            }\n          }\n        }\n        if (gameStage == 4) {\n          FinalStage();\n          if (turn === true) {\n            SetINRC();\n          }\n        }\n        if (gameStage == 5) {\n          if (turn === true) {\n            reset();\n          }\n        }\n      }\n    }\n  }, [gameStage]);\n  function FinalStage() {\n    setMain(auth[3]);\n    setRoundWinner(auth[5]);\n    setTimeInBetween(timeInBetween - 1);\n    setINRClock(true);\n    setNo(false);\n  }\n  function UpdateGame(update) {\n    if (update) {\n      setGame(auth[4]);\n    }\n  }\n  function Stage1Clock(turncheck) {\n    if ((turncheck === true || turn === true) && gameStage === 1) {\n      clearInterval(timerId1.current);\n      timerId1.current = setInterval(() => {\n        setStage1(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timerId1.current);\n    } else {\n      clearInterval(timerId1.current);\n    }\n  }\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (stage1 <= 0) {\n          clearInterval(timerId1.current);\n          setStage1(30);\n          SelectAcronym(wordlist[Math.floor(Math.random() * 3)]);\n        }\n      }\n    }\n  }, [stage1]);\n  function Stage2Clock() {\n    if (!turn) {\n      clearInterval(timerId2.current);\n      timerId2.current = setInterval(() => {\n        setStage2(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timerId2.current);\n    } else {\n      setStage2(60);\n    }\n  }\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (stage2 <= 0) {\n          clearInterval(timerId2.current);\n          setStage2(60);\n          SubmitAcronymTimeout();\n        }\n      }\n    }\n  }, [stage2]);\n  function Stage3Clock(shuffled) {\n    if (turn) {\n      clearInterval(timerId3.current);\n      checkClock3(shuffled);\n      timerId3.current = setInterval(() => {\n        setStage3(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timerId3.current);\n    } else {\n      setStage3(30);\n    }\n  }\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (stage3 <= 0) {\n          clearInterval(timerId3.current);\n          setStage3(30);\n          clearInterval(timerId3.current);\n        }\n      }\n    }\n  }, [stage3]);\n  function checkClock3(shuffled) {\n    if (!stage3run) {\n      timerId3check.current = setInterval(() => {\n        let x = Math.floor(Math.random() * shuffled.length);\n        stage3run = true;\n      }, 30000);\n      return () => clearInterval(timerId3check.current);\n    }\n  }\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (stage3run) {\n          clearInterval(timerId3check.current);\n        }\n      }\n    }\n  }, [stage3run]);\n  function blankAnswers() {\n    setNo(true);\n    const clock = setInterval(() => {\n      if (turn) {\n        nextRound();\n      }\n      clearInterval(clock);\n    }, 3000);\n    return () => clearInterval(clock);\n  }\n  function setID(list) {\n    shuffledID = list;\n  }\n  function SetINRC() {\n    setTimeout(() => {\n      setINRClock(false);\n      setTimeInBetween(3);\n      nextRound();\n      setTurn(false);\n      setSubmit(false);\n    }, 3000);\n  }\n  function DeclareTurn() {\n    setTurn(true);\n  }\n  function GenerateAcronym() {\n    let letter;\n    let word3 = \"\",\n      word4 = \"\",\n      word5 = \"\";\n    for (let i = 3; i < 6; i++) {\n      for (let j = 0; j < i; j++) {\n        letter = {\n          \"0\": \"A\",\n          \"1\": \"B\",\n          \"2\": \"C\",\n          \"3\": \"D\",\n          \"4\": \"E\",\n          \"5\": \"F\",\n          \"6\": \"G\",\n          \"7\": \"H\",\n          \"8\": \"I\",\n          \"9\": \"J\",\n          \"10\": \"K\",\n          \"11\": \"L\",\n          \"12\": \"M\",\n          \"13\": \"N\",\n          \"14\": \"O\",\n          \"15\": \"P\",\n          \"16\": \"Q\",\n          \"17\": \"R\",\n          \"18\": \"S\",\n          \"19\": \"T\",\n          \"20\": \"U\",\n          \"21\": \"V\",\n          \"22\": \"W\",\n          \"23\": \"X\",\n          \"24\": \"Y\",\n          \"25\": \"Z\"\n        }[Math.floor(Math.random() * 25)];\n        if (i == 3) {\n          word3 += letter;\n        }\n        if (i == 4) {\n          word4 += letter;\n        }\n        if (i == 5) {\n          word5 += letter;\n        }\n      }\n    }\n    setAcronym([word3, word4, word5]);\n    return [word3, word4, word5];\n  }\n  function SelectAcronym(Word) {\n    setStage1(30);\n    stage1run = true;\n    const payLoad = {\n      \"method\": \"select\",\n      \"gameId\": auth[1],\n      \"acronym\": Word\n    };\n    ws.send(JSON.stringify(payLoad));\n  }\n  function nextRound() {\n    const payLoad = {\n      \"method\": \"round\",\n      \"gameId\": auth[1]\n    };\n    ws.send(JSON.stringify(payLoad));\n    ImageList = [];\n    setTurn(false);\n    setNo(false);\n    stage1run = false;\n    stage2run = false;\n    stage3run = false;\n  }\n  function reset() {\n    setTimeout(() => {\n      const payLoad = {\n        \"method\": \"reset\",\n        \"gameId\": auth[1]\n      };\n      ws.send(JSON.stringify(payLoad));\n      setTurn(false);\n      setSubmit(false);\n      ImageList = [];\n    }, 5000);\n  }\n  function SelectAnswer(Word, index) {\n    clearInterval(timerId1.current);\n    const id = shuffledID[index];\n    const payLoad = {\n      \"method\": \"point\",\n      \"gameId\": auth[1],\n      \"user\": id,\n      \"acronym\": Word\n    };\n    ws.send(JSON.stringify(payLoad));\n  }\n  function SubmitAcronym(Word) {\n    const answercheck = Word.trim().split(\" \");\n    let check = 0;\n    setStage2(60);\n    stage2run = true;\n    setAnswer({\n      response: ''\n    });\n    if (answercheck.length == mainAcronym.length) {\n      for (let i = 0; i < mainAcronym.length; i++) {\n        if (answercheck[i][0].toLowerCase() === mainAcronym[i].toLowerCase()) {\n          check++;\n        }\n      }\n      if (check == mainAcronym.length) {\n        const payLoad = {\n          \"method\": \"submit\",\n          \"gameId\": auth[1],\n          \"acronym\": Word,\n          \"clientId\": auth[0]\n        };\n        ws.send(JSON.stringify(payLoad));\n        setSubmit(true);\n      } else {\n        alert(\"this is not an acronym of \" + mainAcronym);\n      }\n    } else {\n      alert(\"this is not an acronym of \" + mainAcronym);\n    }\n  }\n  function SubmitAcronymTimeout() {\n    setStage2(60);\n    setAnswer({\n      response: ''\n    });\n    const payLoad = {\n      \"method\": \"submit\",\n      \"gameId\": auth[1],\n      \"acronym\": \"\",\n      \"clientId\": auth[0]\n    };\n    ws.send(JSON.stringify(payLoad));\n    setSubmit(true);\n  }\n  return location.pathname === '/GamePage' ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      height: Height\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"App-header\",\n      children: \"Acronym for me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usercode\",\n      children: [\"Game Code: \", auth[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this), gameStage == 1 && turn === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displaycontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" Pick an accronym \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"acronymButton\",\n          onClick: () => SelectAcronym(acronym[0]),\n          children: [\" \", acronym[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"acronymButton\",\n          onClick: () => SelectAcronym(acronym[1]),\n          children: [\" \", acronym[1], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"acronymButton\",\n          onClick: () => SelectAcronym(acronym[2]),\n          children: [\" \", acronym[2], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\" Time Left to choose \", stage1, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 9\n    }, this), gameStage == 1 && turn === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displaycontainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [\" Waiting for \", whoseTurn, \" to Pick an Acronym \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 9\n    }, this), gameStage == 2 && turn !== true && submitted === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displaycontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [\" Fill out an acronym for \", mainAcronym, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"gameTextbox\",\n        type: \"text\",\n        id: \"textbox\",\n        name: \"response\",\n        value: answer.response,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"submitButton\",\n        onClick: () => SubmitAcronym(answer.response),\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\" Time left to make an acronym \", stage2, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 9\n    }, this), gameStage == 2 && turn === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displaycontainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" Waiting for other players to make their acronym \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 9\n    }, this), gameStage == 3 && turn === true && noAnswer === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displaycontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" Pick Your Favourite \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: answerChoiceList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [\" Time Left to choose \", stage3, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }, this), gameStage == 3 && turn === false && noAnswer === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displaycontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" These are your answers \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: answerList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 9\n    }, this), gameStage == 3 && noAnswer === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displaycontainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" No one answered so no points awarded \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 7\n    }, this), gameStage == 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displaycontainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [roundWinner, \" won the round with the acronym \", mainAcronym]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 9\n    }, this), gameStage == 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displaycontainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [roundWinner, \" Wins  the Game\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playercontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: userlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 491,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(GamePage, \"hDPSrbuP2SKPW7m9krcaVQeVJw4=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["logo","Red","Green","Blue","Yellow","Orange","Purple","RedT","GreenT","BlueT","YellowT","OrangeT","PurpleT","useNavigate","react","useEffect","useState","useRef","useAuth","ws","WebSocket","GamePage","location","ImageList","shuffledID","wordlist","shuffled","stage3run","auth","gameStage","setGame","userlist","setList","Height","setHeight","navigate","imageList","setImageList","image","setImage","noAnswer","setNo","stage1","setStage1","timerId1","timerId1check","stage2","setStage2","timerId2","timerId2check","stage3","setStage3","timerId3","timerId3check","stage4","setStage4","stage4run","setStage4run","timeInBetween","setTimeInBetween","inbetweenRoundClock","setINRClock","acronym","setAcronym","turn","setTurn","mainAcronym","setMain","answer","setAnswer","response","whoseTurn","setWho","answerChoiceList","setChoiceList","answerList","setAnswerList","submitted","setSubmit","roundWinner","setRoundWinner","handleChange","e","name","value","target","pathname","serverlist","turncheck","forEach","c","push","clientName","score","colour","clientId","DeclareTurn","map","nextRound","GenerateAcronym","Stage1Clock","UpdateGame","Stage2Clock","answers","sort","Math","random","a","b","shuffledA","i","length","blankAnswers","setID","SelectAnswer","findIndex","x","Stage3Clock","FinalStage","SetINRC","reset","update","clearInterval","current","setInterval","prev","SelectAcronym","floor","SubmitAcronymTimeout","checkClock3","clock","list","setTimeout","letter","word3","word4","word5","j","Word","stage1run","payLoad","send","JSON","stringify","stage2run","index","id","SubmitAcronym","answercheck","trim","split","check","toLowerCase","alert","height"],"sources":["D:/BIGBOI/Documents/Acronymgame/acronym-game-site/acronymgame/src/pages/GamePage.jsx"],"sourcesContent":["import logo from './4me.png';\r\nimport Red from '../Images/RedPerson.png';\r\nimport Green from '../Images/GreenPerson.png';\r\nimport Blue from '../Images/BluePerson.png';\r\nimport Yellow from '../Images/YellowPerson.png';\r\nimport Orange from '../Images/OrangePerson.png';\r\nimport Purple from '../Images/PurplePerson.png';\r\nimport RedT from '../Images/RedPersonTurn.png';\r\nimport GreenT from '../Images/GreenPersonTurn.png';\r\nimport BlueT from '../Images/BluePersonTurn.png';\r\nimport YellowT from '../Images/YellowPersonTurn.png';\r\nimport OrangeT from '../Images/OrangePersonTurn.png';\r\nimport PurpleT from '../Images/PurplePersonTurn.png';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport react, {useEffect, useState, useRef} from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nconst ws = new WebSocket(\"ws://localhost:9090\")\r\n\r\nconst GamePage = ({location}) => {\r\n  let ImageList = []\r\n  let shuffledID = []\r\n  let wordlist = [];\r\n  let shuffled = [];\r\n\r\n  let stage3run = false;\r\n\r\n  const { auth } = useAuth();\r\n  const [gameStage, setGame] = useState(1);\r\n  const [userlist, setList] = useState();\r\n  const [Height, setHeight] = useState('100hv');\r\n  const navigate = useNavigate();\r\n  const [imageList, setImageList] = useState();\r\n  const [image, setImage] = useState();\r\n  const [noAnswer, setNo] = useState(false);\r\n\r\n  const [stage1, setStage1] = useState(30);\r\n  const timerId1 = useRef()\r\n  const timerId1check = useRef()\r\n \r\n  const [stage2, setStage2] = useState(60);\r\n  const timerId2 = useRef()\r\n  const timerId2check = useRef()\r\n\r\n  const [stage3, setStage3] = useState(30);\r\n  const timerId3 = useRef()\r\n  const timerId3check = useRef()\r\n\r\n  const [stage4, setStage4] = useState(5);\r\n  const [stage4run, setStage4run] = useState(false)\r\n  const [timeInBetween, setTimeInBetween] = useState(3);\r\n  const [inbetweenRoundClock, setINRClock] = useState(false)\r\n  const [acronym, setAcronym] = useState([\"\",\"\",\"\"]);\r\n  const [turn, setTurn] = useState(false);\r\n  const [mainAcronym, setMain] = useState(\"\")\r\n  const [answer, setAnswer] = useState({\r\n    response: '',\r\n  });\r\n  const [whoseTurn, setWho] = useState()\r\n  const [answerChoiceList, setChoiceList] = useState();\r\n  const [answerList, setAnswerList] = useState();\r\n  const [submitted, setSubmit] = useState(false)\r\n  const [roundWinner, setRoundWinner] = useState(\"\")\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAnswer({\r\n      ...answer,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        //setGame(auth[3].stage)\r\n        const serverlist = [];\r\n        let turncheck = false;\r\n        \r\n        auth[2].forEach(c =>{\r\n          serverlist.push(c.clientName + \"\\nScore: \" + c.score);\r\n          if(c.colour === 'Red'){\r\n            if(c.turn === true){\r\n              ImageList.push(RedT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Red)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Green'){\r\n            if(c.turn === true){\r\n              ImageList.push(GreenT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Green)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Blue'){\r\n            if(c.turn === true){\r\n              ImageList.push(BlueT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Blue)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Yellow'){\r\n            if(c.turn === true){\r\n              ImageList.push(YellowT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Yellow)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Orange'){\r\n            if(c.turn === true){\r\n              ImageList.push(OrangeT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Orange)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Purple'){\r\n            if(c.turn === true){\r\n              ImageList.push(PurpleT)\r\n              setWho(c.clientName)\r\n            }else{\r\n              ImageList.push(Purple)\r\n            }\r\n            \r\n          }\r\n          if(c.turn === true && c.clientId === auth[0]){\r\n            \r\n            DeclareTurn()\r\n            turncheck = true;\r\n          }\r\n        })\r\n\r\n        \r\n        setList(serverlist.map(name => <li className='namelist'>{name}</li>))\r\n        setImage(ImageList.map(colour => (<img className='playerimg' key={colour} src= {colour} />)))\r\n        if(auth[6] === true && turncheck === true){\r\n          nextRound()\r\n        }\r\n        if(gameStage == 1 && auth[6] !== \"join\" && auth[6] !== \"delete\"){\r\n          wordlist = GenerateAcronym()\r\n          Stage1Clock(turncheck, wordlist)\r\n        }\r\n        if(auth[4] != gameStage){\r\n          UpdateGame(true)\r\n        }else{\r\n          UpdateGame(false)\r\n        }\r\n        \r\n      } \r\n    }\r\n},[auth])\r\n\r\nuseEffect(() => {\r\n  if(auth[1] == null){\r\n    navigate('/');\r\n  }else{\r\n    if(location.pathname === '/GamePage'){\r\n      if(gameStage == 2 && turn === false){\r\n        setSubmit(false)\r\n        setMain(auth[3])\r\n        setStage2(60)\r\n        Stage2Clock()\r\n      }\r\n      if(gameStage == 3){\r\n        let answers = []\r\n        auth[2].forEach(c => {\r\n          if(c.answer !== \"\"){\r\n            answers.push([c.answer, c.clientId]);\r\n          }\r\n        })\r\n        shuffled = answers.map(value => ({ value, sort: Math.random() })).sort((a, b) => a.sort - b.sort).map(({ value }) => value)\r\n        let shuffledA = [];\r\n        for(let i = 0; i < shuffled.length; i++){\r\n          shuffledA.push(shuffled[i][0])\r\n          shuffledID.push(shuffled[i][1])\r\n        }\r\n        if(shuffledA.length === 0){\r\n          blankAnswers()\r\n        }else{\r\n        setNo(false)\r\n        setID(shuffledID)\r\n        setChoiceList(shuffledA.map(name => <button className=\"acronymButton2\" onClick={() =>SelectAnswer(name, shuffledA.findIndex(x => x === name))} >{name}</button>))\r\n        setAnswerList(shuffledA.map(name => <li className=\"namelist\">{name}</li>))\r\n        if(turn){\r\n          Stage3Clock(shuffled)\r\n        }\r\n        }\r\n        \r\n        \r\n        \r\n      }\r\n      if(gameStage == 4){\r\n        \r\n        FinalStage()\r\n        if(turn === true){\r\n          SetINRC()\r\n        }\r\n        \r\n      }\r\n      if(gameStage == 5){\r\n        if(turn === true){\r\n          reset()\r\n        }\r\n        \r\n      }\r\n    }\r\n  }\r\n},[gameStage])\r\n\r\n  function FinalStage(){\r\n    setMain(auth[3])\r\n    setRoundWinner(auth[5])\r\n    setTimeInBetween(timeInBetween - 1);\r\n    setINRClock(true)\r\n    setNo(false)\r\n  }\r\n\r\n  function UpdateGame(update){\r\n    if(update){\r\n      setGame(auth[4])\r\n    }\r\n\r\n  }\r\n  function Stage1Clock(turncheck){\r\n    if((turncheck === true || turn === true) && gameStage === 1){\r\n      clearInterval(timerId1.current)\r\n\r\n      timerId1.current = setInterval(() => {\r\n          setStage1(prev => prev - 1)\r\n      },1000)\r\n      return() => clearInterval(timerId1.current) \r\n    }else{\r\n      clearInterval(timerId1.current) \r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage1 <=0){\r\n          clearInterval(timerId1.current)\r\n          setStage1(30)\r\n          SelectAcronym(wordlist[Math.floor(Math.random()*3)])\r\n\r\n        }\r\n      }\r\n    }\r\n  },[stage1])\r\n\r\n\r\n  function Stage2Clock(){\r\n    if(!turn){\r\n      clearInterval(timerId2.current)\r\n      timerId2.current = setInterval(() => {\r\n        setStage2(prev => prev - 1)\r\n      },1000)\r\n      return() => clearInterval(timerId2.current)\r\n    }else{\r\n      setStage2(60)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage2 <=0){\r\n          clearInterval(timerId2.current)\r\n          setStage2(60)\r\n          SubmitAcronymTimeout()\r\n        }\r\n      }\r\n    }\r\n  },[stage2])\r\n\r\n  function Stage3Clock(shuffled){\r\n    \r\n    if(turn){\r\n      clearInterval(timerId3.current)\r\n      checkClock3(shuffled)\r\n      timerId3.current = setInterval(() => {\r\n        setStage3(prev => prev - 1)\r\n      },1000)\r\n      return() => clearInterval(timerId3.current)\r\n    }else{\r\n      setStage3(30)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage3 <=0){\r\n          clearInterval(timerId3.current)\r\n          setStage3(30)\r\n          clearInterval(timerId3.current)\r\n        }\r\n      }\r\n    }\r\n  },[stage3])\r\n\r\n  function checkClock3(shuffled){\r\n    if(!stage3run){\r\n      timerId3check.current= setInterval(() => {\r\n        let x =Math.floor(Math.random()*shuffled.length);\r\n        stage3run = true;\r\n      },30000)\r\n      return() => clearInterval(timerId3check.current)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        if(stage3run){\r\n          clearInterval(timerId3check.current)\r\n        }\r\n      }\r\n    }\r\n  },[stage3run])\r\n\r\n  function blankAnswers(){\r\n    setNo(true)\r\n    const clock= setInterval(() => {\r\n      if(turn){\r\n        nextRound()\r\n      }\r\n      clearInterval(clock)\r\n    },3000)\r\n    return() => clearInterval(clock)\r\n  }\r\n\r\n  function setID(list){\r\n    shuffledID = list;\r\n  }\r\n\r\n  function SetINRC(){\r\n    setTimeout(() => {\r\n      setINRClock(false)\r\n      setTimeInBetween(3)\r\n      nextRound()\r\n      setTurn(false)\r\n      setSubmit(false)\r\n    }, 3000)\r\n    \r\n    \r\n  }\r\n\r\n  function DeclareTurn(){\r\n    setTurn(true)\r\n  }\r\n\r\n  function GenerateAcronym(){\r\n    let letter;\r\n    let word3 = \"\", word4 = \"\", word5 = \"\";\r\n    for(let i = 3; i<6; i++){\r\n      for(let j = 0; j<i; j++){\r\n        letter = {\"0\": \"A\", \"1\": \"B\", \"2\": \"C\", \"3\": \"D\",  \"4\": \"E\", \"5\": \"F\", \"6\": \"G\", \"7\": \"H\", \"8\": \"I\",  \"9\": \"J\", \"10\": \"K\", \"11\": \"L\", \"12\": \"M\", \"13\": \"N\",  \"14\": \"O\", \"15\": \"P\", \"16\": \"Q\", \"17\": \"R\", \"18\": \"S\",  \"19\": \"T\", \"20\": \"U\", \"21\": \"V\", \"22\": \"W\", \"23\": \"X\", \"24\" : \"Y\", \"25\" : \"Z\"}[Math.floor(Math.random()*25)];\r\n        if(i == 3){\r\n          word3 += letter;\r\n        }\r\n        if(i == 4){\r\n          word4 += letter;\r\n        }\r\n        if(i == 5){\r\n          word5 += letter;\r\n          }\r\n        }\r\n      }\r\n    setAcronym([word3, word4, word5])\r\n    return([word3, word4, word5])\r\n  }\r\n  \r\n  function SelectAcronym(Word){\r\n    setStage1(30)\r\n    stage1run = true\r\n    const payLoad = {\r\n      \"method\": \"select\",\r\n      \"gameId\" : auth[1],\r\n      \"acronym\" : Word\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n  }\r\n\r\n  function nextRound(){\r\n    const payLoad = {\r\n      \"method\": \"round\",\r\n      \"gameId\" : auth[1],\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n    ImageList = [];\r\n    setTurn(false)\r\n    setNo(false)\r\n    stage1run = false;\r\n    stage2run = false;\r\n    stage3run = false;\r\n  }\r\n\r\n  function reset(){\r\n    setTimeout(() => {\r\n      const payLoad = {\r\n        \"method\": \"reset\",\r\n        \"gameId\" : auth[1],\r\n      }\r\n      ws.send(JSON.stringify(payLoad))\r\n      setTurn(false)\r\n      setSubmit(false)\r\n      ImageList = [];\r\n    }, 5000)\r\n  }\r\n\r\n  function SelectAnswer(Word, index){\r\n    clearInterval(timerId1.current)\r\n    const id = shuffledID[index]\r\n    const payLoad = {\r\n      \"method\": \"point\",\r\n      \"gameId\" : auth[1],\r\n      \"user\" : id,\r\n      \"acronym\" : Word\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n  }\r\n\r\n  \r\n\r\n  function SubmitAcronym(Word){\r\n    const answercheck = Word.trim().split(\" \")\r\n    let check = 0;\r\n    setStage2(60)\r\n    stage2run = true;\r\n    setAnswer({response: '',})\r\n    if(answercheck.length == mainAcronym.length){\r\n      for(let i = 0; i<mainAcronym.length; i++){\r\n        if(answercheck[i][0].toLowerCase() === mainAcronym[i].toLowerCase()){\r\n          check ++;\r\n        }\r\n      }\r\n      if(check == mainAcronym.length){\r\n        const payLoad = {\r\n          \"method\": \"submit\",\r\n          \"gameId\" : auth[1],\r\n          \"acronym\" : Word,\r\n          \"clientId\" : auth[0]\r\n        }\r\n        ws.send(JSON.stringify(payLoad))\r\n        setSubmit(true);\r\n      }else{\r\n        alert(\"this is not an acronym of \" + mainAcronym)\r\n      }\r\n      \r\n    }else{\r\n      alert(\"this is not an acronym of \" + mainAcronym)\r\n    }\r\n    \r\n  }\r\n\r\n  function SubmitAcronymTimeout(){\r\n    setStage2(60)\r\n    setAnswer({response: '',})\r\n    const payLoad = {\r\n      \"method\": \"submit\",\r\n      \"gameId\" : auth[1],\r\n      \"acronym\" : \"\",\r\n      \"clientId\" : auth[0]\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n    setSubmit(true);\r\n  }\r\n\r\n  return (location.pathname === '/GamePage')\r\n  ? (\r\n    <div className=\"App\" style={{ height: Height}}>\r\n      <h1 className=\"App-header\">\r\n        Acronym for me\r\n      </h1>\r\n      <div className= \"usercode\">Game Code: {auth[1]}</div>\r\n      {(gameStage == 1 && turn === true) &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\"> Pick an accronym </div>\r\n        <ul>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[0])}> {acronym[0]}</button>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[1])}> {acronym[1]} </button>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[2])}> {acronym[2]} </button>\r\n        </ul>\r\n          <div className = \"timer\"> Time Left to choose {stage1} </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 1 && turn === false) &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\"> Waiting for {whoseTurn} to Pick an Acronym </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 2 && turn !== true && submitted === false) &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\"> Fill out an acronym for {mainAcronym} </div>\r\n          <input\r\n            className = \"gameTextbox\"\r\n            type=\"text\"\r\n            id = \"textbox\"\r\n            name=\"response\"\r\n            value={answer.response}\r\n            onChange={handleChange}\r\n            />\r\n            <div> </div>\r\n            <button type=\"button\" className=\"submitButton\" onClick={() =>SubmitAcronym(answer.response)}> Submit </button>\r\n            <div className = \"timer\"> Time left to make an acronym {stage2} </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 2 && turn === true) &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\"> Waiting for other players to make their acronym </div>\r\n        </div>\r\n      }\r\n      {(gameStage == 3 && turn === true && noAnswer === false) &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\"> Pick Your Favourite </div>\r\n        <ul className=\"list\">\r\n          {answerChoiceList}\r\n        </ul>\r\n        <div className = \"timer\"> Time Left to choose {stage3} </div>\r\n        </div>\r\n      }\r\n\r\n      {(gameStage == 3 && turn === false && noAnswer === false) &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\"> These are your answers </div>\r\n        <ul>\r\n          {answerList}\r\n        </ul>\r\n        </div>\r\n      }\r\n      {(gameStage == 3 && noAnswer === true) &&\r\n      <div className = \"displaycontainer\">\r\n      <div className = \"instructions\"> No one answered so no points awarded </div>\r\n      </div>      \r\n      }\r\n      {gameStage == 4 &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\">{roundWinner} won the round with the acronym {mainAcronym}</div>\r\n        </div>\r\n      }\r\n      {gameStage == 5 &&\r\n        <div className = \"displaycontainer\">\r\n          <div className = \"instructions\">{roundWinner} Wins  the Game</div>\r\n        </div>\r\n      }\r\n      <div className= 'playercontainer'>\r\n      <ul className=\"list\">\r\n        {userlist}\r\n      </ul>\r\n      <ul>\r\n        {image}\r\n      </ul>\r\n      </div>\r\n      \r\n\r\n    </div>\r\n  ): null;\r\n}\r\n\r\nexport default GamePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}