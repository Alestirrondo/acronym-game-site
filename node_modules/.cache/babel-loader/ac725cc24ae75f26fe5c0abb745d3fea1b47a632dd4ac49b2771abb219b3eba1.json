{"ast":null,"code":"var _jsxFileName = \"D:\\\\BIGBOI\\\\Documents\\\\Acronymgame\\\\acronym-game-site\\\\acronymgame\\\\src\\\\pages\\\\GamePage.jsx\",\n  _s = $RefreshSig$();\nimport logo from './4me.png';\nimport Red from '../Images/RedPerson.png';\nimport Green from '../Images/GreenPerson.png';\nimport Blue from '../Images/BluePerson.png';\nimport Yellow from '../Images/YellowPerson.png';\nimport Orange from '../Images/OrangePerson.png';\nimport Purple from '../Images/PurplePerson.png';\nimport RedT from '../Images/RedPersonTurn.png';\nimport GreenT from '../Images/GreenPersonTurn.png';\nimport BlueT from '../Images/BluePersonTurn.png';\nimport YellowT from '../Images/YellowPersonTurn.png';\nimport OrangeT from '../Images/OrangePersonTurn.png';\nimport PurpleT from '../Images/PurplePersonTurn.png';\nimport { useNavigate } from 'react-router-dom';\nimport react, { useEffect, useState } from 'react';\nimport useAuth from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ws = new WebSocket(\"ws://localhost:9090\");\nconst GamePage = _ref => {\n  _s();\n  let {\n    location\n  } = _ref;\n  let ImageList = [];\n  let shuffledID = [];\n  const {\n    auth\n  } = useAuth();\n  const [gameStage, setGame] = useState(1);\n  const [userlist, setList] = useState();\n  const [Height, setHeight] = useState('100hv');\n  const navigate = useNavigate();\n  const [imageList, setImageList] = useState();\n  const [image, setImage] = useState();\n  const [timeInBetween, setTimeInBetween] = useState(5);\n  const [inbetweenRoundClock, setINRClock] = useState(false);\n  const [acronym, setAcronym] = useState([\"\", \"\", \"\"]);\n  const [turn, setTurn] = useState(false);\n  const [mainAcronym, setMain] = useState(\"\");\n  const [answer, setAnswer] = useState({\n    response: ''\n  });\n  const [answerChoiceList, setChoiceList] = useState();\n  const [answerList, setAnswerList] = useState();\n  const [submitted, setSubmit] = useState(false);\n  const [roundWinner, setRoundWinner] = useState(\"\");\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAnswer({\n      ...answer,\n      [name]: value\n    });\n  };\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        //setGame(auth[3].stage)\n        const serverlist = [];\n        auth[2].forEach(c => {\n          serverlist.push(c.clientName + \"\\nScore: \" + c.score);\n          if (c.colour === 'Red') {\n            if (c.turn === true) {\n              ImageList.push(RedT);\n            } else {\n              ImageList.push(Red);\n            }\n          }\n          if (c.colour === 'Green') {\n            if (c.turn === true) {\n              ImageList.push(GreenT);\n            } else {\n              ImageList.push(Green);\n            }\n          }\n          if (c.colour === 'Blue') {\n            if (c.turn === true) {\n              ImageList.push(BlueT);\n            } else {\n              ImageList.push(Blue);\n            }\n          }\n          if (c.colour === 'Yellow') {\n            if (c.turn === true) {\n              ImageList.push(YellowT);\n            } else {\n              ImageList.push(Yellow);\n            }\n          }\n          if (c.colour === 'Orange') {\n            if (c.turn === true) {\n              ImageList.push(OrangeT);\n            } else {\n              ImageList.push(Orange);\n            }\n          }\n          if (c.colour === 'Purple') {\n            if (c.turn === true) {\n              ImageList.push(PurpleT);\n            } else {\n              ImageList.push(Purple);\n            }\n          }\n          console.log(c.clientName);\n          if (c.turn === true && c.clientId === auth[0]) {\n            setTurn(true);\n          }\n        });\n        console.log(auth[2]);\n        setList(serverlist.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"namelist\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 40\n        }, this)));\n        setImage(ImageList.map(colour => /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"playerimg\",\n          src: colour\n        }, colour, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 43\n        }, this)));\n        if (gameStage == 1) {\n          setAcronym(GenerateAcronym());\n        }\n      }\n    }\n  }, [auth]);\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        if (gameStage == 2) {\n          setMain(auth[3]);\n        }\n        if (gameStage == 3) {\n          let answers = [];\n          auth[2].forEach(c => {\n            if (c.turn !== true) {\n              answers.push([c.answer, c.clientId]);\n            }\n          });\n          let shuffled = answers.map(value => ({\n            value,\n            sort: Math.random()\n          })).sort((a, b) => a.sort - b.sort).map(_ref2 => {\n            let {\n              value\n            } = _ref2;\n            return value;\n          });\n          let shuffledA = [];\n          for (let i = 0; i < shuffled.length; i++) {\n            shuffledA.push(shuffled[i][0]);\n            shuffledID.push(shuffled[i][1]);\n          }\n          setID(shuffledID);\n          setChoiceList(shuffledA.map(name => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"acronymButton2\",\n            onClick: () => SelectAnswer(name, shuffledA.findIndex(x => x === name)),\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 45\n          }, this)));\n          setAnswerList(shuffledA.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"namelist\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 45\n          }, this)));\n        }\n        if (gameStage == 4) {\n          console.log(auth[3]);\n          setAcronym(auth[3]);\n          setRoundWinner(auth[5]);\n          setTimeInBetween(timeInBetween - 1);\n          setINRClock(true);\n        }\n      }\n    }\n  }, [gameStage]);\n  useEffect(() => {\n    if (auth[1] == null) {\n      navigate('/');\n    } else {\n      if (location.pathname === '/GamePage') {\n        setGame(auth[4]);\n      }\n    }\n  }, [auth]);\n  useEffect(() => {\n    if (location.pathname === '/GamePage') {\n      if (auth[1] == null) {\n        navigate('/');\n      } else {\n        setTimeout(() => {\n          if (timeInBetween >= 0) {\n            setTimeInBetween(timeInBetween - 1);\n          }\n          if (timeInBetween == 0) {\n            setINRClock(false);\n            setTimeInBetween(5);\n            nextRound();\n          }\n        }, 1000);\n      }\n    }\n  }, [timeInBetween]);\n  function setID(list) {\n    shuffledID = list;\n  }\n  function GenerateAcronym() {\n    let letter;\n    let word3 = \"\",\n      word4 = \"\",\n      word5 = \"\";\n    for (let i = 3; i < 6; i++) {\n      for (let j = 0; j < i; j++) {\n        letter = {\n          \"0\": \"A\",\n          \"1\": \"B\",\n          \"2\": \"C\",\n          \"3\": \"D\",\n          \"4\": \"E\",\n          \"5\": \"F\",\n          \"6\": \"G\",\n          \"7\": \"H\",\n          \"8\": \"I\",\n          \"9\": \"J\",\n          \"10\": \"K\",\n          \"11\": \"L\",\n          \"12\": \"M\",\n          \"13\": \"N\",\n          \"14\": \"O\",\n          \"15\": \"P\",\n          \"16\": \"Q\",\n          \"17\": \"R\",\n          \"18\": \"S\",\n          \"19\": \"T\",\n          \"20\": \"U\",\n          \"21\": \"V\",\n          \"22\": \"W\",\n          \"23\": \"X\",\n          \"24\": \"Y\",\n          \"25\": \"Z\"\n        }[Math.floor(Math.random() * 25)];\n        if (i == 3) {\n          word3 += letter;\n        }\n        if (i == 4) {\n          word4 += letter;\n        }\n        if (i == 5) {\n          word5 += letter;\n        }\n      }\n    }\n    return [word3, word4, word5];\n  }\n  function SelectAcronym(Word) {\n    const payLoad = {\n      \"method\": \"select\",\n      \"gameId\": auth[1],\n      \"acronym\": Word\n    };\n    ws.send(JSON.stringify(payLoad));\n  }\n  function nextRound() {\n    const payLoad = {\n      \"method\": \"round\",\n      \"gameId\": auth[1]\n    };\n    ws.send(JSON.stringify(payLoad));\n  }\n  function SelectAnswer(Word, index) {\n    //console.log(IDList)\n    const id = shuffledID[index];\n    console.log(id);\n    const payLoad = {\n      \"method\": \"point\",\n      \"gameId\": auth[1],\n      \"user\": id,\n      \"acronym\": Word\n    };\n    ws.send(JSON.stringify(payLoad));\n  }\n  function SubmitAcronym(Word) {\n    const answercheck = Word.trim().split(\" \");\n    let check = 0;\n    if (answercheck.length == mainAcronym.length) {\n      for (let i = 0; i < mainAcronym.length; i++) {\n        console.log(answercheck[i][0]);\n        console.log(mainAcronym[i]);\n        if (answercheck[i][0].toLowerCase() === mainAcronym[i].toLowerCase()) {\n          check++;\n        }\n      }\n      if (check == mainAcronym.length) {\n        const payLoad = {\n          \"method\": \"submit\",\n          \"gameId\": auth[1],\n          \"acronym\": Word,\n          \"clientId\": auth[0]\n        };\n        ws.send(JSON.stringify(payLoad));\n        setSubmit(true);\n      } else {\n        alert(\"this is not an acronym of \" + mainAcronym);\n      }\n    } else {\n      alert(\"this is not an acronym of \" + mainAcronym);\n    }\n  }\n  console.log(gameStage);\n  return location.pathname === '/GamePage' ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      height: Height\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"App-header\",\n      children: \"Acronym for me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usercode\",\n      children: [\"Game Code: \", auth[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), gameStage == 1 && turn === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" Pick an accronym \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"acronymButton\",\n          onClick: () => SelectAcronym(acronym[0]),\n          children: [\" \", acronym[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"acronymButton\",\n          onClick: () => SelectAcronym(acronym[1]),\n          children: [\" \", acronym[1], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"acronymButton\",\n          onClick: () => SelectAcronym(acronym[2]),\n          children: [\" \", acronym[2], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), gameStage == 2 && turn !== true && submitted === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [\" Fill out an acronym for \", mainAcronym, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"gameTextbox\",\n        type: \"text\",\n        name: \"response\",\n        value: answer.response,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"submitButton\",\n        onClick: () => SubmitAcronym(answer.response),\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this), gameStage == 3 && turn === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" Pick Your Favourite \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: answerChoiceList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }, this), gameStage == 3 && turn === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: \" These are your answers \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: answerList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this), gameStage == 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [roundWinner, \" won the round with the acronym \", acronym]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playercontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: userlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(GamePage, \"nATcjStefpaRRg+tm7TOCWKriT0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["logo","Red","Green","Blue","Yellow","Orange","Purple","RedT","GreenT","BlueT","YellowT","OrangeT","PurpleT","useNavigate","react","useEffect","useState","useAuth","ws","WebSocket","GamePage","location","ImageList","shuffledID","auth","gameStage","setGame","userlist","setList","Height","setHeight","navigate","imageList","setImageList","image","setImage","timeInBetween","setTimeInBetween","inbetweenRoundClock","setINRClock","acronym","setAcronym","turn","setTurn","mainAcronym","setMain","answer","setAnswer","response","answerChoiceList","setChoiceList","answerList","setAnswerList","submitted","setSubmit","roundWinner","setRoundWinner","handleChange","e","name","value","target","pathname","serverlist","forEach","c","push","clientName","score","colour","console","log","clientId","map","GenerateAcronym","answers","shuffled","sort","Math","random","a","b","shuffledA","i","length","setID","SelectAnswer","findIndex","x","setTimeout","nextRound","list","letter","word3","word4","word5","j","floor","SelectAcronym","Word","payLoad","send","JSON","stringify","index","id","SubmitAcronym","answercheck","trim","split","check","toLowerCase","alert","height"],"sources":["D:/BIGBOI/Documents/Acronymgame/acronym-game-site/acronymgame/src/pages/GamePage.jsx"],"sourcesContent":["import logo from './4me.png';\r\nimport Red from '../Images/RedPerson.png';\r\nimport Green from '../Images/GreenPerson.png';\r\nimport Blue from '../Images/BluePerson.png';\r\nimport Yellow from '../Images/YellowPerson.png';\r\nimport Orange from '../Images/OrangePerson.png';\r\nimport Purple from '../Images/PurplePerson.png';\r\nimport RedT from '../Images/RedPersonTurn.png';\r\nimport GreenT from '../Images/GreenPersonTurn.png';\r\nimport BlueT from '../Images/BluePersonTurn.png';\r\nimport YellowT from '../Images/YellowPersonTurn.png';\r\nimport OrangeT from '../Images/OrangePersonTurn.png';\r\nimport PurpleT from '../Images/PurplePersonTurn.png';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport react, {useEffect, useState} from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nconst ws = new WebSocket(\"ws://localhost:9090\")\r\n\r\nconst GamePage = ({location}) => {\r\n  let ImageList = []\r\n  let shuffledID = []\r\n  const { auth } = useAuth();\r\n  const [gameStage, setGame] = useState(1);\r\n  const [userlist, setList] = useState();\r\n  const [Height, setHeight] = useState('100hv');\r\n  const navigate = useNavigate();\r\n  const [imageList, setImageList] = useState();\r\n  const [image, setImage] = useState();\r\n\r\n  const [timeInBetween, setTimeInBetween] = useState(5);\r\n  const [inbetweenRoundClock, setINRClock] = useState(false)\r\n  const [acronym, setAcronym] = useState([\"\",\"\",\"\"]);\r\n  const [turn, setTurn] = useState(false);\r\n  const [mainAcronym, setMain] = useState(\"\")\r\n  const [answer, setAnswer] = useState({\r\n    response: '',\r\n  });\r\n  const [answerChoiceList, setChoiceList] = useState();\r\n  const [answerList, setAnswerList] = useState();\r\n  const [submitted, setSubmit] = useState(false)\r\n  const [roundWinner, setRoundWinner] = useState(\"\")\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAnswer({\r\n      ...answer,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(auth[1] == null){\r\n      navigate('/');\r\n    }else{\r\n      if(location.pathname === '/GamePage'){\r\n        //setGame(auth[3].stage)\r\n        const serverlist = [];\r\n        auth[2].forEach(c =>{\r\n          serverlist.push(c.clientName + \"\\nScore: \" + c.score);\r\n          if(c.colour === 'Red'){\r\n            if(c.turn === true){\r\n              ImageList.push(RedT)\r\n            }else{\r\n              ImageList.push(Red)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Green'){\r\n            if(c.turn === true){\r\n              ImageList.push(GreenT)\r\n            }else{\r\n              ImageList.push(Green)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Blue'){\r\n            if(c.turn === true){\r\n              ImageList.push(BlueT)\r\n            }else{\r\n              ImageList.push(Blue)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Yellow'){\r\n            if(c.turn === true){\r\n              ImageList.push(YellowT)\r\n            }else{\r\n              ImageList.push(Yellow)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Orange'){\r\n            if(c.turn === true){\r\n              ImageList.push(OrangeT)\r\n            }else{\r\n              ImageList.push(Orange)\r\n            }\r\n            \r\n          }\r\n          if(c.colour === 'Purple'){\r\n            if(c.turn === true){\r\n              ImageList.push(PurpleT)\r\n            }else{\r\n              ImageList.push(Purple)\r\n            }\r\n            \r\n          }\r\n          console.log(c.clientName)\r\n          if(c.turn === true && c.clientId === auth[0]){\r\n            setTurn(true)\r\n          }\r\n        })\r\n        console.log(auth[2])\r\n        setList(serverlist.map(name => <li className='namelist'>{name}</li>))\r\n        setImage(ImageList.map(colour => (<img className='playerimg' key={colour} src= {colour} />)))\r\n        if(gameStage == 1){\r\n          setAcronym(GenerateAcronym())\r\n        }\r\n      } \r\n    }\r\n},[auth])\r\n\r\nuseEffect(() => {\r\n  if(auth[1] == null){\r\n    navigate('/');\r\n  }else{\r\n    if(location.pathname === '/GamePage'){\r\n      if(gameStage == 2){\r\n        setMain(auth[3])\r\n      }\r\n      if(gameStage == 3){\r\n        let answers = []\r\n        auth[2].forEach(c => {\r\n          if(c.turn !== true){\r\n            answers.push([c.answer, c.clientId]);\r\n          }\r\n        })\r\n        let shuffled = answers.map(value => ({ value, sort: Math.random() })).sort((a, b) => a.sort - b.sort).map(({ value }) => value)\r\n        let shuffledA = [];\r\n        for(let i = 0; i < shuffled.length; i++){\r\n          shuffledA.push(shuffled[i][0])\r\n          shuffledID.push(shuffled[i][1])\r\n        }\r\n        setID(shuffledID)\r\n        setChoiceList(shuffledA.map(name => <button className=\"acronymButton2\" onClick={() =>SelectAnswer(name, shuffledA.findIndex(x => x === name))} >{name}</button>))\r\n        setAnswerList(shuffledA.map(name => <li className=\"namelist\">{name}</li>))\r\n        \r\n        \r\n      }\r\n      if(gameStage == 4){\r\n        console.log(auth[3])\r\n        setAcronym(auth[3])\r\n        setRoundWinner(auth[5])\r\n        setTimeInBetween(timeInBetween - 1);\r\n        setINRClock(true)\r\n        \r\n      }\r\n    }\r\n  }\r\n},[gameStage])\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  if(auth[1] == null){\r\n    navigate('/');\r\n  }else{\r\n    if(location.pathname === '/GamePage'){\r\n      setGame(auth[4])\r\n    }\r\n  }\r\n},[auth])\r\n\r\nuseEffect(() => {\r\n  if(location.pathname === '/GamePage'){\r\n    if(auth[1] == null){\r\n        navigate('/');\r\n    }else{\r\n      setTimeout(() => {\r\n        if(timeInBetween >= 0){\r\n          setTimeInBetween(timeInBetween - 1);\r\n        }\r\n        if(timeInBetween == 0){\r\n          setINRClock(false)\r\n          setTimeInBetween(5)\r\n          nextRound()\r\n        }\r\n      }, 1000)\r\n    }\r\n  }\r\n},[timeInBetween])\r\n  function setID(list){\r\n    shuffledID = list;\r\n  }\r\n\r\n  function GenerateAcronym(){\r\n    let letter;\r\n    let word3 = \"\", word4 = \"\", word5 = \"\";\r\n    for(let i = 3; i<6; i++){\r\n      for(let j = 0; j<i; j++){\r\n        letter = {\"0\": \"A\", \"1\": \"B\", \"2\": \"C\", \"3\": \"D\",  \"4\": \"E\", \"5\": \"F\", \"6\": \"G\", \"7\": \"H\", \"8\": \"I\",  \"9\": \"J\", \"10\": \"K\", \"11\": \"L\", \"12\": \"M\", \"13\": \"N\",  \"14\": \"O\", \"15\": \"P\", \"16\": \"Q\", \"17\": \"R\", \"18\": \"S\",  \"19\": \"T\", \"20\": \"U\", \"21\": \"V\", \"22\": \"W\", \"23\": \"X\", \"24\" : \"Y\", \"25\" : \"Z\"}[Math.floor(Math.random()*25)];\r\n        if(i == 3){\r\n          word3 += letter;\r\n        }\r\n        if(i == 4){\r\n          word4 += letter;\r\n        }\r\n        if(i == 5){\r\n          word5 += letter;\r\n          }\r\n        }\r\n      }\r\n    return ([word3, word4, word5]);\r\n  }\r\n  \r\n  function SelectAcronym(Word){\r\n    const payLoad = {\r\n      \"method\": \"select\",\r\n      \"gameId\" : auth[1],\r\n      \"acronym\" : Word\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n  }\r\n\r\n  function nextRound(){\r\n    const payLoad = {\r\n      \"method\": \"round\",\r\n      \"gameId\" : auth[1],\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n  }\r\n\r\n  function SelectAnswer(Word, index){\r\n    //console.log(IDList)\r\n    const id = shuffledID[index]\r\n    console.log(id)\r\n    const payLoad = {\r\n      \"method\": \"point\",\r\n      \"gameId\" : auth[1],\r\n      \"user\" : id,\r\n      \"acronym\" : Word\r\n    }\r\n    ws.send(JSON.stringify(payLoad))\r\n  }\r\n\r\n  function SubmitAcronym(Word){\r\n    const answercheck = Word.trim().split(\" \")\r\n    let check = 0;\r\n    if(answercheck.length == mainAcronym.length){\r\n      for(let i = 0; i<mainAcronym.length; i++){\r\n        console.log(answercheck[i][0])\r\n        console.log(mainAcronym[i])\r\n        if(answercheck[i][0].toLowerCase() === mainAcronym[i].toLowerCase()){\r\n          check ++;\r\n        }\r\n      }\r\n      if(check == mainAcronym.length){\r\n        const payLoad = {\r\n          \"method\": \"submit\",\r\n          \"gameId\" : auth[1],\r\n          \"acronym\" : Word,\r\n          \"clientId\" : auth[0]\r\n        }\r\n        ws.send(JSON.stringify(payLoad))\r\n        setSubmit(true);\r\n      }else{\r\n        alert(\"this is not an acronym of \" + mainAcronym)\r\n      }\r\n      \r\n    }else{\r\n      alert(\"this is not an acronym of \" + mainAcronym)\r\n    }\r\n    \r\n  }\r\n\r\n  console.log(gameStage)\r\n\r\n  return (location.pathname === '/GamePage')\r\n  ? (\r\n    <div className=\"App\" style={{ height: Height}}>\r\n      <h1 className=\"App-header\">\r\n        Acronym for me\r\n      </h1>\r\n      <div className= \"usercode\">Game Code: {auth[1]}</div>\r\n      {(gameStage == 1 && turn === true) &&\r\n        <div>\r\n          <div className = \"instructions\"> Pick an accronym </div>\r\n        <ul>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[0])}> {acronym[0]}</button>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[1])}> {acronym[1]} </button>\r\n          <button type=\"button\" className=\"acronymButton\" onClick={() =>SelectAcronym(acronym[2])}> {acronym[2]} </button>\r\n        </ul>\r\n        </div>\r\n      }\r\n      {(gameStage == 2 && turn !== true && submitted === false) &&\r\n        <div>\r\n          <div className = \"instructions\"> Fill out an acronym for {mainAcronym} </div>\r\n          <input\r\n            className = \"gameTextbox\"\r\n            type=\"text\"\r\n            name=\"response\"\r\n            value={answer.response}\r\n            onChange={handleChange}\r\n            />\r\n            <div> </div>\r\n            <button type=\"button\" className=\"submitButton\" onClick={() =>SubmitAcronym(answer.response)}> Submit </button>\r\n        </div>\r\n      }\r\n      {(gameStage == 3 && turn === true) &&\r\n        <div>\r\n          <div className = \"instructions\"> Pick Your Favourite </div>\r\n        <ul className=\"list\">\r\n          {answerChoiceList}\r\n        </ul>\r\n        </div>\r\n      }\r\n\r\n      {(gameStage == 3 && turn === false) &&\r\n        <div>\r\n          <div className = \"instructions\"> These are your answers </div>\r\n        <ul>\r\n          {answerList}\r\n        </ul>\r\n        </div>\r\n      }\r\n      {gameStage == 4 &&\r\n        <div>\r\n          <div className = \"instructions\">{roundWinner} won the round with the acronym {acronym}</div>\r\n        </div>\r\n      }\r\n      <div className= 'playercontainer'>\r\n      <ul className=\"list\">\r\n        {userlist}\r\n      </ul>\r\n      <ul>\r\n        {image}\r\n      </ul>\r\n      </div>\r\n      \r\n\r\n    </div>\r\n  ): null;\r\n}\r\n\r\nexport default GamePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}