{"ast":null,"code":"var _jsxFileName = \"D:\\\\BIGBOI\\\\Documents\\\\Acronymgame\\\\acronym-game-site\\\\acronymgame\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useCallback } from 'react';\nimport { useNavigate, useLocation, Route, Link, NavLink } from 'react-router-dom';\nimport HomePage from \"./pages/HomePage\";\nimport FindaGame from \"./pages/FindaGame\";\nimport GameWaitingPageJoin from \"./pages/GameWaitingPageJoin\";\nimport useAuth from './hooks/useAuth';\nimport GameWaitingPageCreator from './pages/GameWaitingPageCreator';\nimport GamePage from './pages/GamePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet clientId = null;\nconst ws = new WebSocket(\"ws://localhost:9090\");\nfunction App() {\n  _s();\n  const {\n    setAuth\n  } = useAuth();\n  ws.onmessage = message => {\n    const response = JSON.parse(message.data);\n    if (response.method === \"connect\") {\n      clientId = response.clientID;\n      setAuth([clientId]);\n    }\n    if (response.method === \"create\") {\n      const game = response.game;\n      setAuth([clientId, response.game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\n    }\n    if (response.method === \"RandomServer\") {\n      const game = response.game;\n      const duty = response.duty;\n      if (duty === \"Parent\") {\n        navigate('/GameWaitingPageCreator');\n      } else {\n        if (location.pathname === '/GameWaitingPageCreator') {\n          navigate('/GameWaitingPageCreator');\n        } else {\n          if (game.state === \"waiting\") {\n            navigate('/GameWaitingPageJoin');\n          } else {\n            navigate('/GamePage');\n          }\n        }\n      }\n      setAuth([clientId, response.game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\n    }\n    if (response.method === \"join\") {\n      const game = response.game;\n      const colour = [];\n      if (game != null) {\n        const serverlist = [];\n        game.clients.forEach(c => {\n          serverlist.push(c.clientName);\n          colour.push(c.colour);\n        });\n        if (location.pathname === '/GameWaitingPageCreator') {\n          navigate('/GameWaitingPageCreator');\n        } else {\n          if (game.state === \"waiting\") {\n            navigate('/GameWaitingPageJoin');\n          } else {\n            navigate('/GamePage');\n          }\n        }\n        setAuth([clientId, response.game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\n      } else {\n        alert(\"That game server code does not work\");\n      }\n    }\n    if (response.method === \"count\") {\n      const game = response.game;\n      const serverlist = [];\n      game.clients.forEach(c => {\n        serverlist.push(c.clientName);\n      });\n      setAuth([clientId, game.id, serverlist, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\n    }\n    if (response.method === \"start\") {\n      const game = response.game;\n      navigate('/GamePage');\n      setAuth([clientId, game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\n    }\n    if (response.method === \"delete\") {\n      const game = response.game;\n      let x = 0,\n        clientNum;\n      if (response.roundchange) {\n        game.clients.forEach(c => {\n          if (c.clientId === clientId) {\n            clientNum = x;\n          }\n          x++;\n        });\n        const duty = game.clients[clientNum].duty;\n        if (duty === \"Parent\") {\n          if (location.pathname === '/GameWaitingPageJoin') {\n            navigate('/GameWaitingPageCreator');\n          }\n        }\n        setAuth([clientId, game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.roundchange, game.availability]);\n      } else {\n        if (response.stage3) {\n          let turn = false;\n          game.clients.forEach(c => {\n            if (c.clientId === clientId && c.turn === true) {\n              turn = true;\n            }\n          });\n          if (turn === true) {\n            setAuth([clientId, game.id, game.clients, game.acronym, game.stage, game.roundWinner, \"ping\", game.availability]);\n          }\n        } else {\n          game.clients.forEach(c => {\n            if (c.clientId === clientId) {\n              clientNum = x;\n            }\n            x++;\n          });\n          const duty = game.clients[clientNum].duty;\n          if (duty === \"Parent\") {\n            if (location.pathname === '/GameWaitingPageJoin') {\n              navigate('/GameWaitingPageCreator');\n            }\n          }\n          setAuth([clientId, game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\n        }\n      }\n    }\n    if (response.method === \"serverFull\") {\n      alert(\"That Server Is currently Full\");\n    }\n    if (response.method === \"select\") {\n      const game = response.game;\n      setAuth([clientId, game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\n    }\n    if (response.method === \"submit\") {\n      const game = response.game;\n      setAuth([clientId, game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\n    }\n    if (response.method === \"point\") {\n      const game = response.game;\n      setAuth([clientId, game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\n    }\n    if (response.method === \"round\") {\n      const game = response.game;\n      setAuth([clientId, game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\n      setAuth([clientId, game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\n    }\n    if (response.method === \"reset\") {\n      const game = response.game;\n      setAuth([clientId, game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\n    }\n    if (response.method === \"serverClosed\") {\n      window.location.reload();\n      alert(\"The server has closed due to lack of players\");\n      setAuth([clientId, null, null, null, null, null]);\n    }\n  };\n  const navigate = useNavigate();\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HomePage, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FindaGame, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameWaitingPageCreator, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameWaitingPageJoin, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GamePage, {\n      location: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZKd9XECVDsN9OtrtbenHZh111cE=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useNavigate","useLocation","Route","Link","NavLink","HomePage","FindaGame","GameWaitingPageJoin","useAuth","GameWaitingPageCreator","GamePage","clientId","ws","WebSocket","App","setAuth","onmessage","message","response","JSON","parse","data","method","clientID","game","id","clients","acronym","stage","roundWinner","availability","duty","navigate","location","pathname","state","colour","serverlist","forEach","c","push","clientName","alert","x","clientNum","roundchange","stage3","turn","window","reload"],"sources":["D:/BIGBOI/Documents/Acronymgame/acronym-game-site/acronymgame/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useNavigate, useLocation, Route, Link, NavLink } from 'react-router-dom';\r\nimport HomePage from \"./pages/HomePage\";\r\nimport FindaGame from \"./pages/FindaGame\";\r\nimport GameWaitingPageJoin from \"./pages/GameWaitingPageJoin\";\r\nimport useAuth from './hooks/useAuth';\r\nimport GameWaitingPageCreator from './pages/GameWaitingPageCreator';\r\nimport GamePage from './pages/GamePage';\r\nlet clientId = null;\r\nconst ws = new WebSocket(\"ws://localhost:9090\")\r\n\r\n\r\nfunction App() {\r\n  const {setAuth} = useAuth();\r\n  ws.onmessage = message =>{\r\n    const response = JSON.parse(message.data);\r\n    if(response.method === \"connect\"){\r\n      clientId = response.clientID;\r\n      setAuth([clientId]);\r\n    }\r\n\r\n    if(response.method === \"create\"){\r\n      const game = response.game;\r\n      setAuth([clientId, response.game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n\r\n    if(response.method === \"RandomServer\"){\r\n      const game = response.game;\r\n      const duty = response.duty\r\n      if(duty === \"Parent\"){\r\n        navigate('/GameWaitingPageCreator')\r\n      }else{\r\n        if(location.pathname === '/GameWaitingPageCreator'){\r\n          navigate('/GameWaitingPageCreator')\r\n        }else{\r\n          if(game.state === \"waiting\"){\r\n            navigate('/GameWaitingPageJoin')\r\n          }else {\r\n            navigate('/GamePage')\r\n          }\r\n          \r\n        }\r\n      }\r\n      setAuth([clientId, response.game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n\r\n    if(response.method === \"join\"){\r\n      const game = response.game;\r\n      const colour = [];\r\n      if(game != null){\r\n        const serverlist = [];\r\n        game.clients.forEach(c =>{\r\n          serverlist.push(c.clientName);\r\n          colour.push(c.colour);\r\n        })\r\n      \r\n        if(location.pathname === '/GameWaitingPageCreator'){\r\n          navigate('/GameWaitingPageCreator')\r\n        }else{\r\n          if(game.state === \"waiting\"){\r\n            navigate('/GameWaitingPageJoin')\r\n          }else {\r\n            navigate('/GamePage')\r\n          }\r\n        }\r\n        setAuth([clientId, response.game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n      }else{\r\n        alert(\"That game server code does not work\");\r\n      }\r\n      \r\n      \r\n    }\r\n\r\n    if(response.method === \"count\"){\r\n      const game = response.game;\r\n      const serverlist = [];\r\n      game.clients.forEach(c =>{\r\n        serverlist.push(c.clientName);\r\n      })\r\n\r\n      setAuth([clientId, game.id, serverlist, game.acronym, game.stage, game.roundWinner, response.method, game.availability]);\r\n      \r\n    }\r\n\r\n    if(response.method === \"start\"){\r\n      const game = response.game;\r\n      navigate('/GamePage')\r\n      setAuth([clientId,game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n      \r\n    }\r\n\r\n\r\n    if(response.method === \"delete\"){\r\n      const game = response.game;\r\n      let x = 0, clientNum;\r\n      if(response.roundchange){\r\n        game.clients.forEach(c =>{\r\n          if(c.clientId === clientId){\r\n            clientNum = x;\r\n          }\r\n          x++;\r\n        })\r\n        const duty = game.clients[clientNum].duty;\r\n        if(duty === \"Parent\"){\r\n          if( location.pathname === '/GameWaitingPageJoin'){\r\n            navigate('/GameWaitingPageCreator')\r\n          }\r\n          \r\n        }\r\n        setAuth([clientId,game.id,game.clients,game.acronym, game.stage, game.roundWinner, response.roundchange, game.availability])\r\n      }else{\r\n        \r\n        if(response.stage3){\r\n          let turn = false\r\n          game.clients.forEach(c =>{\r\n            if(c.clientId === clientId && c.turn === true){\r\n              turn = true\r\n            }\r\n          })\r\n          if(turn === true){\r\n            setAuth([clientId,game.id,game.clients,game.acronym, game.stage, game.roundWinner, \"ping\", game.availability])\r\n          }\r\n        }else{\r\n          game.clients.forEach(c =>{\r\n            if(c.clientId === clientId){\r\n              clientNum = x;\r\n            }\r\n            x++;\r\n          })\r\n          const duty = game.clients[clientNum].duty;\r\n          if(duty === \"Parent\"){\r\n            if( location.pathname === '/GameWaitingPageJoin'){\r\n              navigate('/GameWaitingPageCreator')\r\n            }\r\n            \r\n          }\r\n          setAuth([clientId,game.id,game.clients,game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n        }\r\n        \r\n      }\r\n      \r\n\r\n    }\r\n\r\n    if(response.method === \"serverFull\"){\r\n      alert(\"That Server Is currently Full\")\r\n      \r\n    }\r\n\r\n    if(response.method === \"select\"){\r\n      const game = response.game\r\n      setAuth([clientId,game.id,game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n\r\n    if(response.method === \"submit\"){\r\n      const game = response.game\r\n      setAuth([clientId,game.id,game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n    if(response.method === \"point\"){\r\n      const game = response.game\r\n      setAuth([clientId,game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n    if(response.method === \"round\"){\r\n      const game = response.game\r\n      setAuth([clientId,game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n      setAuth([clientId,game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n\r\n    if(response.method === \"reset\"){\r\n      const game = response.game\r\n      setAuth([clientId,game.id, game.clients, game.acronym, game.stage, game.roundWinner, response.method, game.availability])\r\n    }\r\n\r\n    if(response.method === \"serverClosed\"){\r\n      window.location.reload();\r\n      alert(\"The server has closed due to lack of players\")\r\n\r\n      setAuth([clientId, null, null, null, null, null])\r\n    }\r\n  }\r\n  \r\n  \r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <HomePage location={location}/>\r\n      <FindaGame location={location}/>\r\n      <GameWaitingPageCreator location={location}/>\r\n      <GameWaitingPageJoin location={location}/>\r\n      <GamePage location={location}/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}